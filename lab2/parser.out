Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EYE
    ONES
    ZEROS

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instructions -> { instructions }
Rule 7     instruction -> statement ;
Rule 8     instruction -> IF ( condition ) instructions
Rule 9     instruction -> IF ( condition ) instructions ELSE instructions
Rule 10    instruction -> FOR ID = range instructions
Rule 11    instruction -> WHILE ( condition ) instructions
Rule 12    range -> expression : expression
Rule 13    condition -> expression EQ expression
Rule 14    condition -> expression NEQ expression
Rule 15    condition -> expression LE expression
Rule 16    condition -> expression GE expression
Rule 17    condition -> expression < expression
Rule 18    condition -> expression > expression
Rule 19    statement -> assignment
Rule 20    statement -> print_statement
Rule 21    assignment -> variable = expression
Rule 22    assignment -> variable ADDASSIGN expression
Rule 23    assignment -> variable SUBASSIGN expression
Rule 24    assignment -> variable MULASSIGN expression
Rule 25    assignment -> variable DIVASSIGN expression
Rule 26    variable -> ID
Rule 27    variable -> element
Rule 28    element -> vector_element
Rule 29    element -> matrix_element
Rule 30    vector_element -> ID [ INT ]
Rule 31    matrix_element -> ID [ INT , INT ]
Rule 32    expression -> expression + expression
Rule 33    expression -> expression - expression
Rule 34    expression -> expression * expression
Rule 35    expression -> expression / expression
Rule 36    expression -> expression DOTADD expression
Rule 37    expression -> expression DOTSUB expression
Rule 38    expression -> expression DOTMUL expression
Rule 39    expression -> expression DOTDIV expression
Rule 40    expression -> ( expression )
Rule 41    expression -> number
Rule 42    number -> INT
Rule 43    number -> FLOAT
Rule 44    print_statement -> PRINT STRING
Rule 45    print_statement -> PRINT variable
Rule 46    statement -> BREAK
Rule 47    statement -> CONTINUE
Rule 48    statement -> RETURN

Terminals, with rules where they appear

(                    : 8 9 11 40
)                    : 8 9 11 40
*                    : 34
+                    : 32
,                    : 31
-                    : 33
/                    : 35
:                    : 12
;                    : 7
<                    : 17
=                    : 10 21
>                    : 18
ADDASSIGN            : 22
BREAK                : 46
CONTINUE             : 47
DIVASSIGN            : 25
DOTADD               : 36
DOTDIV               : 39
DOTMUL               : 38
DOTSUB               : 37
ELSE                 : 9
EQ                   : 13
EYE                  : 
FLOAT                : 43
FOR                  : 10
GE                   : 16
ID                   : 10 26 30 31
IF                   : 8 9
INT                  : 30 31 31 42
LE                   : 15
MULASSIGN            : 24
NEQ                  : 14
ONES                 : 
PRINT                : 44 45
RETURN               : 48
STRING               : 44
SUBASSIGN            : 23
WHILE                : 11
ZEROS                : 
[                    : 30 31
]                    : 30 31
error                : 
{                    : 6
}                    : 6

Nonterminals, with rules where they appear

assignment           : 19
condition            : 8 9 11
element              : 27
expression           : 12 12 13 13 14 14 15 15 16 16 17 17 18 18 21 22 23 24 25 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40
instruction          : 4 5
instructions         : 2 4 6 8 9 9 10 11
instructions_opt     : 1
matrix_element       : 29
number               : 41
print_statement      : 20
program              : 0
range                : 10
statement            : 7
variable             : 21 22 23 24 25 45
vector_element       : 28

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instructions -> . { instructions }
    (7) instruction -> . statement ;
    (8) instruction -> . IF ( condition ) instructions
    (9) instruction -> . IF ( condition ) instructions ELSE instructions
    (10) instruction -> . FOR ID = range instructions
    (11) instruction -> . WHILE ( condition ) instructions
    (19) statement -> . assignment
    (20) statement -> . print_statement
    (46) statement -> . BREAK
    (47) statement -> . CONTINUE
    (48) statement -> . RETURN
    (21) assignment -> . variable = expression
    (22) assignment -> . variable ADDASSIGN expression
    (23) assignment -> . variable SUBASSIGN expression
    (24) assignment -> . variable MULASSIGN expression
    (25) assignment -> . variable DIVASSIGN expression
    (44) print_statement -> . PRINT STRING
    (45) print_statement -> . PRINT variable
    (26) variable -> . ID
    (27) variable -> . element
    (28) element -> . vector_element
    (29) element -> . matrix_element
    (30) vector_element -> . ID [ INT ]
    (31) matrix_element -> . ID [ INT , INT ]

    $end            reduce using rule 3 (instructions_opt -> .)
    {               shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 17
    ID              shift and go to state 9

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    statement                      shift and go to state 6
    assignment                     shift and go to state 11
    print_statement                shift and go to state 12
    variable                       shift and go to state 16
    element                        shift and go to state 18
    vector_element                 shift and go to state 19
    matrix_element                 shift and go to state 20

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (7) instruction -> . statement ;
    (8) instruction -> . IF ( condition ) instructions
    (9) instruction -> . IF ( condition ) instructions ELSE instructions
    (10) instruction -> . FOR ID = range instructions
    (11) instruction -> . WHILE ( condition ) instructions
    (19) statement -> . assignment
    (20) statement -> . print_statement
    (46) statement -> . BREAK
    (47) statement -> . CONTINUE
    (48) statement -> . RETURN
    (21) assignment -> . variable = expression
    (22) assignment -> . variable ADDASSIGN expression
    (23) assignment -> . variable SUBASSIGN expression
    (24) assignment -> . variable MULASSIGN expression
    (25) assignment -> . variable DIVASSIGN expression
    (44) print_statement -> . PRINT STRING
    (45) print_statement -> . PRINT variable
    (26) variable -> . ID
    (27) variable -> . element
    (28) element -> . vector_element
    (29) element -> . matrix_element
    (30) vector_element -> . ID [ INT ]
    (31) matrix_element -> . ID [ INT , INT ]

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 17
    ID              shift and go to state 9

    instruction                    shift and go to state 21
    statement                      shift and go to state 6
    assignment                     shift and go to state 11
    print_statement                shift and go to state 12
    variable                       shift and go to state 16
    element                        shift and go to state 18
    vector_element                 shift and go to state 19
    matrix_element                 shift and go to state 20

state 4

    (5) instructions -> instruction .

    IF              reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    }               reduce using rule 5 (instructions -> instruction .)
    ELSE            reduce using rule 5 (instructions -> instruction .)


state 5

    (6) instructions -> { . instructions }
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instructions -> . { instructions }
    (7) instruction -> . statement ;
    (8) instruction -> . IF ( condition ) instructions
    (9) instruction -> . IF ( condition ) instructions ELSE instructions
    (10) instruction -> . FOR ID = range instructions
    (11) instruction -> . WHILE ( condition ) instructions
    (19) statement -> . assignment
    (20) statement -> . print_statement
    (46) statement -> . BREAK
    (47) statement -> . CONTINUE
    (48) statement -> . RETURN
    (21) assignment -> . variable = expression
    (22) assignment -> . variable ADDASSIGN expression
    (23) assignment -> . variable SUBASSIGN expression
    (24) assignment -> . variable MULASSIGN expression
    (25) assignment -> . variable DIVASSIGN expression
    (44) print_statement -> . PRINT STRING
    (45) print_statement -> . PRINT variable
    (26) variable -> . ID
    (27) variable -> . element
    (28) element -> . vector_element
    (29) element -> . matrix_element
    (30) vector_element -> . ID [ INT ]
    (31) matrix_element -> . ID [ INT , INT ]

    {               shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 17
    ID              shift and go to state 9

    instructions                   shift and go to state 22
    instruction                    shift and go to state 4
    statement                      shift and go to state 6
    assignment                     shift and go to state 11
    print_statement                shift and go to state 12
    variable                       shift and go to state 16
    element                        shift and go to state 18
    vector_element                 shift and go to state 19
    matrix_element                 shift and go to state 20

state 6

    (7) instruction -> statement . ;

    ;               shift and go to state 23


state 7

    (8) instruction -> IF . ( condition ) instructions
    (9) instruction -> IF . ( condition ) instructions ELSE instructions

    (               shift and go to state 24


state 8

    (10) instruction -> FOR . ID = range instructions

    ID              shift and go to state 25


state 9

    (26) variable -> ID .
    (30) vector_element -> ID . [ INT ]
    (31) matrix_element -> ID . [ INT , INT ]

    =               reduce using rule 26 (variable -> ID .)
    ADDASSIGN       reduce using rule 26 (variable -> ID .)
    SUBASSIGN       reduce using rule 26 (variable -> ID .)
    MULASSIGN       reduce using rule 26 (variable -> ID .)
    DIVASSIGN       reduce using rule 26 (variable -> ID .)
    ;               reduce using rule 26 (variable -> ID .)
    [               shift and go to state 26


state 10

    (11) instruction -> WHILE . ( condition ) instructions

    (               shift and go to state 27


state 11

    (19) statement -> assignment .

    ;               reduce using rule 19 (statement -> assignment .)


state 12

    (20) statement -> print_statement .

    ;               reduce using rule 20 (statement -> print_statement .)


state 13

    (46) statement -> BREAK .

    ;               reduce using rule 46 (statement -> BREAK .)


state 14

    (47) statement -> CONTINUE .

    ;               reduce using rule 47 (statement -> CONTINUE .)


state 15

    (48) statement -> RETURN .

    ;               reduce using rule 48 (statement -> RETURN .)


state 16

    (21) assignment -> variable . = expression
    (22) assignment -> variable . ADDASSIGN expression
    (23) assignment -> variable . SUBASSIGN expression
    (24) assignment -> variable . MULASSIGN expression
    (25) assignment -> variable . DIVASSIGN expression

    =               shift and go to state 28
    ADDASSIGN       shift and go to state 29
    SUBASSIGN       shift and go to state 30
    MULASSIGN       shift and go to state 31
    DIVASSIGN       shift and go to state 32


state 17

    (44) print_statement -> PRINT . STRING
    (45) print_statement -> PRINT . variable
    (26) variable -> . ID
    (27) variable -> . element
    (28) element -> . vector_element
    (29) element -> . matrix_element
    (30) vector_element -> . ID [ INT ]
    (31) matrix_element -> . ID [ INT , INT ]

    STRING          shift and go to state 33
    ID              shift and go to state 9

    variable                       shift and go to state 34
    element                        shift and go to state 18
    vector_element                 shift and go to state 19
    matrix_element                 shift and go to state 20

state 18

    (27) variable -> element .

    =               reduce using rule 27 (variable -> element .)
    ADDASSIGN       reduce using rule 27 (variable -> element .)
    SUBASSIGN       reduce using rule 27 (variable -> element .)
    MULASSIGN       reduce using rule 27 (variable -> element .)
    DIVASSIGN       reduce using rule 27 (variable -> element .)
    ;               reduce using rule 27 (variable -> element .)


state 19

    (28) element -> vector_element .

    =               reduce using rule 28 (element -> vector_element .)
    ADDASSIGN       reduce using rule 28 (element -> vector_element .)
    SUBASSIGN       reduce using rule 28 (element -> vector_element .)
    MULASSIGN       reduce using rule 28 (element -> vector_element .)
    DIVASSIGN       reduce using rule 28 (element -> vector_element .)
    ;               reduce using rule 28 (element -> vector_element .)


state 20

    (29) element -> matrix_element .

    =               reduce using rule 29 (element -> matrix_element .)
    ADDASSIGN       reduce using rule 29 (element -> matrix_element .)
    SUBASSIGN       reduce using rule 29 (element -> matrix_element .)
    MULASSIGN       reduce using rule 29 (element -> matrix_element .)
    DIVASSIGN       reduce using rule 29 (element -> matrix_element .)
    ;               reduce using rule 29 (element -> matrix_element .)


state 21

    (4) instructions -> instructions instruction .

    IF              reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    }               reduce using rule 4 (instructions -> instructions instruction .)
    ELSE            reduce using rule 4 (instructions -> instructions instruction .)


state 22

    (6) instructions -> { instructions . }
    (4) instructions -> instructions . instruction
    (7) instruction -> . statement ;
    (8) instruction -> . IF ( condition ) instructions
    (9) instruction -> . IF ( condition ) instructions ELSE instructions
    (10) instruction -> . FOR ID = range instructions
    (11) instruction -> . WHILE ( condition ) instructions
    (19) statement -> . assignment
    (20) statement -> . print_statement
    (46) statement -> . BREAK
    (47) statement -> . CONTINUE
    (48) statement -> . RETURN
    (21) assignment -> . variable = expression
    (22) assignment -> . variable ADDASSIGN expression
    (23) assignment -> . variable SUBASSIGN expression
    (24) assignment -> . variable MULASSIGN expression
    (25) assignment -> . variable DIVASSIGN expression
    (44) print_statement -> . PRINT STRING
    (45) print_statement -> . PRINT variable
    (26) variable -> . ID
    (27) variable -> . element
    (28) element -> . vector_element
    (29) element -> . matrix_element
    (30) vector_element -> . ID [ INT ]
    (31) matrix_element -> . ID [ INT , INT ]

    }               shift and go to state 35
    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 17
    ID              shift and go to state 9

    instruction                    shift and go to state 21
    statement                      shift and go to state 6
    assignment                     shift and go to state 11
    print_statement                shift and go to state 12
    variable                       shift and go to state 16
    element                        shift and go to state 18
    vector_element                 shift and go to state 19
    matrix_element                 shift and go to state 20

state 23

    (7) instruction -> statement ; .

    IF              reduce using rule 7 (instruction -> statement ; .)
    FOR             reduce using rule 7 (instruction -> statement ; .)
    WHILE           reduce using rule 7 (instruction -> statement ; .)
    BREAK           reduce using rule 7 (instruction -> statement ; .)
    CONTINUE        reduce using rule 7 (instruction -> statement ; .)
    RETURN          reduce using rule 7 (instruction -> statement ; .)
    PRINT           reduce using rule 7 (instruction -> statement ; .)
    ID              reduce using rule 7 (instruction -> statement ; .)
    $end            reduce using rule 7 (instruction -> statement ; .)
    }               reduce using rule 7 (instruction -> statement ; .)
    ELSE            reduce using rule 7 (instruction -> statement ; .)


state 24

    (8) instruction -> IF ( . condition ) instructions
    (9) instruction -> IF ( . condition ) instructions ELSE instructions
    (13) condition -> . expression EQ expression
    (14) condition -> . expression NEQ expression
    (15) condition -> . expression LE expression
    (16) condition -> . expression GE expression
    (17) condition -> . expression < expression
    (18) condition -> . expression > expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    condition                      shift and go to state 37
    expression                     shift and go to state 38
    number                         shift and go to state 39

state 25

    (10) instruction -> FOR ID . = range instructions

    =               shift and go to state 42


state 26

    (30) vector_element -> ID [ . INT ]
    (31) matrix_element -> ID [ . INT , INT ]

    INT             shift and go to state 43


state 27

    (11) instruction -> WHILE ( . condition ) instructions
    (13) condition -> . expression EQ expression
    (14) condition -> . expression NEQ expression
    (15) condition -> . expression LE expression
    (16) condition -> . expression GE expression
    (17) condition -> . expression < expression
    (18) condition -> . expression > expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    condition                      shift and go to state 44
    expression                     shift and go to state 38
    number                         shift and go to state 39

state 28

    (21) assignment -> variable = . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 45
    number                         shift and go to state 39

state 29

    (22) assignment -> variable ADDASSIGN . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 46
    number                         shift and go to state 39

state 30

    (23) assignment -> variable SUBASSIGN . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 47
    number                         shift and go to state 39

state 31

    (24) assignment -> variable MULASSIGN . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 48
    number                         shift and go to state 39

state 32

    (25) assignment -> variable DIVASSIGN . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 49
    number                         shift and go to state 39

state 33

    (44) print_statement -> PRINT STRING .

    ;               reduce using rule 44 (print_statement -> PRINT STRING .)


state 34

    (45) print_statement -> PRINT variable .

    ;               reduce using rule 45 (print_statement -> PRINT variable .)


state 35

    (6) instructions -> { instructions } .

    IF              reduce using rule 6 (instructions -> { instructions } .)
    FOR             reduce using rule 6 (instructions -> { instructions } .)
    WHILE           reduce using rule 6 (instructions -> { instructions } .)
    BREAK           reduce using rule 6 (instructions -> { instructions } .)
    CONTINUE        reduce using rule 6 (instructions -> { instructions } .)
    RETURN          reduce using rule 6 (instructions -> { instructions } .)
    PRINT           reduce using rule 6 (instructions -> { instructions } .)
    ID              reduce using rule 6 (instructions -> { instructions } .)
    $end            reduce using rule 6 (instructions -> { instructions } .)
    }               reduce using rule 6 (instructions -> { instructions } .)
    ELSE            reduce using rule 6 (instructions -> { instructions } .)


state 36

    (40) expression -> ( . expression )
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 50
    number                         shift and go to state 39

state 37

    (8) instruction -> IF ( condition . ) instructions
    (9) instruction -> IF ( condition . ) instructions ELSE instructions

    )               shift and go to state 51


state 38

    (13) condition -> expression . EQ expression
    (14) condition -> expression . NEQ expression
    (15) condition -> expression . LE expression
    (16) condition -> expression . GE expression
    (17) condition -> expression . < expression
    (18) condition -> expression . > expression
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    EQ              shift and go to state 52
    NEQ             shift and go to state 53
    LE              shift and go to state 54
    GE              shift and go to state 55
    <               shift and go to state 56
    >               shift and go to state 57
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 39

    (41) expression -> number .

    EQ              reduce using rule 41 (expression -> number .)
    NEQ             reduce using rule 41 (expression -> number .)
    LE              reduce using rule 41 (expression -> number .)
    GE              reduce using rule 41 (expression -> number .)
    <               reduce using rule 41 (expression -> number .)
    >               reduce using rule 41 (expression -> number .)
    +               reduce using rule 41 (expression -> number .)
    -               reduce using rule 41 (expression -> number .)
    *               reduce using rule 41 (expression -> number .)
    /               reduce using rule 41 (expression -> number .)
    DOTADD          reduce using rule 41 (expression -> number .)
    DOTSUB          reduce using rule 41 (expression -> number .)
    DOTMUL          reduce using rule 41 (expression -> number .)
    DOTDIV          reduce using rule 41 (expression -> number .)
    ;               reduce using rule 41 (expression -> number .)
    )               reduce using rule 41 (expression -> number .)
    :               reduce using rule 41 (expression -> number .)
    {               reduce using rule 41 (expression -> number .)
    IF              reduce using rule 41 (expression -> number .)
    FOR             reduce using rule 41 (expression -> number .)
    WHILE           reduce using rule 41 (expression -> number .)
    BREAK           reduce using rule 41 (expression -> number .)
    CONTINUE        reduce using rule 41 (expression -> number .)
    RETURN          reduce using rule 41 (expression -> number .)
    PRINT           reduce using rule 41 (expression -> number .)
    ID              reduce using rule 41 (expression -> number .)


state 40

    (42) number -> INT .

    EQ              reduce using rule 42 (number -> INT .)
    NEQ             reduce using rule 42 (number -> INT .)
    LE              reduce using rule 42 (number -> INT .)
    GE              reduce using rule 42 (number -> INT .)
    <               reduce using rule 42 (number -> INT .)
    >               reduce using rule 42 (number -> INT .)
    +               reduce using rule 42 (number -> INT .)
    -               reduce using rule 42 (number -> INT .)
    *               reduce using rule 42 (number -> INT .)
    /               reduce using rule 42 (number -> INT .)
    DOTADD          reduce using rule 42 (number -> INT .)
    DOTSUB          reduce using rule 42 (number -> INT .)
    DOTMUL          reduce using rule 42 (number -> INT .)
    DOTDIV          reduce using rule 42 (number -> INT .)
    ;               reduce using rule 42 (number -> INT .)
    )               reduce using rule 42 (number -> INT .)
    :               reduce using rule 42 (number -> INT .)
    {               reduce using rule 42 (number -> INT .)
    IF              reduce using rule 42 (number -> INT .)
    FOR             reduce using rule 42 (number -> INT .)
    WHILE           reduce using rule 42 (number -> INT .)
    BREAK           reduce using rule 42 (number -> INT .)
    CONTINUE        reduce using rule 42 (number -> INT .)
    RETURN          reduce using rule 42 (number -> INT .)
    PRINT           reduce using rule 42 (number -> INT .)
    ID              reduce using rule 42 (number -> INT .)


state 41

    (43) number -> FLOAT .

    EQ              reduce using rule 43 (number -> FLOAT .)
    NEQ             reduce using rule 43 (number -> FLOAT .)
    LE              reduce using rule 43 (number -> FLOAT .)
    GE              reduce using rule 43 (number -> FLOAT .)
    <               reduce using rule 43 (number -> FLOAT .)
    >               reduce using rule 43 (number -> FLOAT .)
    +               reduce using rule 43 (number -> FLOAT .)
    -               reduce using rule 43 (number -> FLOAT .)
    *               reduce using rule 43 (number -> FLOAT .)
    /               reduce using rule 43 (number -> FLOAT .)
    DOTADD          reduce using rule 43 (number -> FLOAT .)
    DOTSUB          reduce using rule 43 (number -> FLOAT .)
    DOTMUL          reduce using rule 43 (number -> FLOAT .)
    DOTDIV          reduce using rule 43 (number -> FLOAT .)
    ;               reduce using rule 43 (number -> FLOAT .)
    )               reduce using rule 43 (number -> FLOAT .)
    :               reduce using rule 43 (number -> FLOAT .)
    {               reduce using rule 43 (number -> FLOAT .)
    IF              reduce using rule 43 (number -> FLOAT .)
    FOR             reduce using rule 43 (number -> FLOAT .)
    WHILE           reduce using rule 43 (number -> FLOAT .)
    BREAK           reduce using rule 43 (number -> FLOAT .)
    CONTINUE        reduce using rule 43 (number -> FLOAT .)
    RETURN          reduce using rule 43 (number -> FLOAT .)
    PRINT           reduce using rule 43 (number -> FLOAT .)
    ID              reduce using rule 43 (number -> FLOAT .)


state 42

    (10) instruction -> FOR ID = . range instructions
    (12) range -> . expression : expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    range                          shift and go to state 66
    expression                     shift and go to state 67
    number                         shift and go to state 39

state 43

    (30) vector_element -> ID [ INT . ]
    (31) matrix_element -> ID [ INT . , INT ]

    ]               shift and go to state 68
    ,               shift and go to state 69


state 44

    (11) instruction -> WHILE ( condition . ) instructions

    )               shift and go to state 70


state 45

    (21) assignment -> variable = expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    ;               reduce using rule 21 (assignment -> variable = expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 46

    (22) assignment -> variable ADDASSIGN expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    ;               reduce using rule 22 (assignment -> variable ADDASSIGN expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 47

    (23) assignment -> variable SUBASSIGN expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    ;               reduce using rule 23 (assignment -> variable SUBASSIGN expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 48

    (24) assignment -> variable MULASSIGN expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    ;               reduce using rule 24 (assignment -> variable MULASSIGN expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 49

    (25) assignment -> variable DIVASSIGN expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    ;               reduce using rule 25 (assignment -> variable DIVASSIGN expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 50

    (40) expression -> ( expression . )
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    )               shift and go to state 71
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 51

    (8) instruction -> IF ( condition ) . instructions
    (9) instruction -> IF ( condition ) . instructions ELSE instructions
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instructions -> . { instructions }
    (7) instruction -> . statement ;
    (8) instruction -> . IF ( condition ) instructions
    (9) instruction -> . IF ( condition ) instructions ELSE instructions
    (10) instruction -> . FOR ID = range instructions
    (11) instruction -> . WHILE ( condition ) instructions
    (19) statement -> . assignment
    (20) statement -> . print_statement
    (46) statement -> . BREAK
    (47) statement -> . CONTINUE
    (48) statement -> . RETURN
    (21) assignment -> . variable = expression
    (22) assignment -> . variable ADDASSIGN expression
    (23) assignment -> . variable SUBASSIGN expression
    (24) assignment -> . variable MULASSIGN expression
    (25) assignment -> . variable DIVASSIGN expression
    (44) print_statement -> . PRINT STRING
    (45) print_statement -> . PRINT variable
    (26) variable -> . ID
    (27) variable -> . element
    (28) element -> . vector_element
    (29) element -> . matrix_element
    (30) vector_element -> . ID [ INT ]
    (31) matrix_element -> . ID [ INT , INT ]

    {               shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 17
    ID              shift and go to state 9

    instructions                   shift and go to state 72
    instruction                    shift and go to state 4
    statement                      shift and go to state 6
    assignment                     shift and go to state 11
    print_statement                shift and go to state 12
    variable                       shift and go to state 16
    element                        shift and go to state 18
    vector_element                 shift and go to state 19
    matrix_element                 shift and go to state 20

state 52

    (13) condition -> expression EQ . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 73
    number                         shift and go to state 39

state 53

    (14) condition -> expression NEQ . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 74
    number                         shift and go to state 39

state 54

    (15) condition -> expression LE . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 75
    number                         shift and go to state 39

state 55

    (16) condition -> expression GE . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 76
    number                         shift and go to state 39

state 56

    (17) condition -> expression < . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 77
    number                         shift and go to state 39

state 57

    (18) condition -> expression > . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 78
    number                         shift and go to state 39

state 58

    (32) expression -> expression + . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 79
    number                         shift and go to state 39

state 59

    (33) expression -> expression - . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 80
    number                         shift and go to state 39

state 60

    (34) expression -> expression * . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 81
    number                         shift and go to state 39

state 61

    (35) expression -> expression / . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 82
    number                         shift and go to state 39

state 62

    (36) expression -> expression DOTADD . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 83
    number                         shift and go to state 39

state 63

    (37) expression -> expression DOTSUB . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 84
    number                         shift and go to state 39

state 64

    (38) expression -> expression DOTMUL . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 85
    number                         shift and go to state 39

state 65

    (39) expression -> expression DOTDIV . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 86
    number                         shift and go to state 39

state 66

    (10) instruction -> FOR ID = range . instructions
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instructions -> . { instructions }
    (7) instruction -> . statement ;
    (8) instruction -> . IF ( condition ) instructions
    (9) instruction -> . IF ( condition ) instructions ELSE instructions
    (10) instruction -> . FOR ID = range instructions
    (11) instruction -> . WHILE ( condition ) instructions
    (19) statement -> . assignment
    (20) statement -> . print_statement
    (46) statement -> . BREAK
    (47) statement -> . CONTINUE
    (48) statement -> . RETURN
    (21) assignment -> . variable = expression
    (22) assignment -> . variable ADDASSIGN expression
    (23) assignment -> . variable SUBASSIGN expression
    (24) assignment -> . variable MULASSIGN expression
    (25) assignment -> . variable DIVASSIGN expression
    (44) print_statement -> . PRINT STRING
    (45) print_statement -> . PRINT variable
    (26) variable -> . ID
    (27) variable -> . element
    (28) element -> . vector_element
    (29) element -> . matrix_element
    (30) vector_element -> . ID [ INT ]
    (31) matrix_element -> . ID [ INT , INT ]

    {               shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 17
    ID              shift and go to state 9

    instructions                   shift and go to state 87
    instruction                    shift and go to state 4
    statement                      shift and go to state 6
    assignment                     shift and go to state 11
    print_statement                shift and go to state 12
    variable                       shift and go to state 16
    element                        shift and go to state 18
    vector_element                 shift and go to state 19
    matrix_element                 shift and go to state 20

state 67

    (12) range -> expression . : expression
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    :               shift and go to state 88
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 68

    (30) vector_element -> ID [ INT ] .

    =               reduce using rule 30 (vector_element -> ID [ INT ] .)
    ADDASSIGN       reduce using rule 30 (vector_element -> ID [ INT ] .)
    SUBASSIGN       reduce using rule 30 (vector_element -> ID [ INT ] .)
    MULASSIGN       reduce using rule 30 (vector_element -> ID [ INT ] .)
    DIVASSIGN       reduce using rule 30 (vector_element -> ID [ INT ] .)
    ;               reduce using rule 30 (vector_element -> ID [ INT ] .)


state 69

    (31) matrix_element -> ID [ INT , . INT ]

    INT             shift and go to state 89


state 70

    (11) instruction -> WHILE ( condition ) . instructions
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instructions -> . { instructions }
    (7) instruction -> . statement ;
    (8) instruction -> . IF ( condition ) instructions
    (9) instruction -> . IF ( condition ) instructions ELSE instructions
    (10) instruction -> . FOR ID = range instructions
    (11) instruction -> . WHILE ( condition ) instructions
    (19) statement -> . assignment
    (20) statement -> . print_statement
    (46) statement -> . BREAK
    (47) statement -> . CONTINUE
    (48) statement -> . RETURN
    (21) assignment -> . variable = expression
    (22) assignment -> . variable ADDASSIGN expression
    (23) assignment -> . variable SUBASSIGN expression
    (24) assignment -> . variable MULASSIGN expression
    (25) assignment -> . variable DIVASSIGN expression
    (44) print_statement -> . PRINT STRING
    (45) print_statement -> . PRINT variable
    (26) variable -> . ID
    (27) variable -> . element
    (28) element -> . vector_element
    (29) element -> . matrix_element
    (30) vector_element -> . ID [ INT ]
    (31) matrix_element -> . ID [ INT , INT ]

    {               shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 17
    ID              shift and go to state 9

    instructions                   shift and go to state 90
    instruction                    shift and go to state 4
    statement                      shift and go to state 6
    assignment                     shift and go to state 11
    print_statement                shift and go to state 12
    variable                       shift and go to state 16
    element                        shift and go to state 18
    vector_element                 shift and go to state 19
    matrix_element                 shift and go to state 20

state 71

    (40) expression -> ( expression ) .

    EQ              reduce using rule 40 (expression -> ( expression ) .)
    NEQ             reduce using rule 40 (expression -> ( expression ) .)
    LE              reduce using rule 40 (expression -> ( expression ) .)
    GE              reduce using rule 40 (expression -> ( expression ) .)
    <               reduce using rule 40 (expression -> ( expression ) .)
    >               reduce using rule 40 (expression -> ( expression ) .)
    +               reduce using rule 40 (expression -> ( expression ) .)
    -               reduce using rule 40 (expression -> ( expression ) .)
    *               reduce using rule 40 (expression -> ( expression ) .)
    /               reduce using rule 40 (expression -> ( expression ) .)
    DOTADD          reduce using rule 40 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 40 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 40 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 40 (expression -> ( expression ) .)
    ;               reduce using rule 40 (expression -> ( expression ) .)
    )               reduce using rule 40 (expression -> ( expression ) .)
    :               reduce using rule 40 (expression -> ( expression ) .)
    {               reduce using rule 40 (expression -> ( expression ) .)
    IF              reduce using rule 40 (expression -> ( expression ) .)
    FOR             reduce using rule 40 (expression -> ( expression ) .)
    WHILE           reduce using rule 40 (expression -> ( expression ) .)
    BREAK           reduce using rule 40 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 40 (expression -> ( expression ) .)
    RETURN          reduce using rule 40 (expression -> ( expression ) .)
    PRINT           reduce using rule 40 (expression -> ( expression ) .)
    ID              reduce using rule 40 (expression -> ( expression ) .)


state 72

    (8) instruction -> IF ( condition ) instructions .
    (9) instruction -> IF ( condition ) instructions . ELSE instructions
    (4) instructions -> instructions . instruction
    (7) instruction -> . statement ;
    (8) instruction -> . IF ( condition ) instructions
    (9) instruction -> . IF ( condition ) instructions ELSE instructions
    (10) instruction -> . FOR ID = range instructions
    (11) instruction -> . WHILE ( condition ) instructions
    (19) statement -> . assignment
    (20) statement -> . print_statement
    (46) statement -> . BREAK
    (47) statement -> . CONTINUE
    (48) statement -> . RETURN
    (21) assignment -> . variable = expression
    (22) assignment -> . variable ADDASSIGN expression
    (23) assignment -> . variable SUBASSIGN expression
    (24) assignment -> . variable MULASSIGN expression
    (25) assignment -> . variable DIVASSIGN expression
    (44) print_statement -> . PRINT STRING
    (45) print_statement -> . PRINT variable
    (26) variable -> . ID
    (27) variable -> . element
    (28) element -> . vector_element
    (29) element -> . matrix_element
    (30) vector_element -> . ID [ INT ]
    (31) matrix_element -> . ID [ INT , INT ]

    IF              reduce using rule 8 (instruction -> IF ( condition ) instructions .)
    FOR             reduce using rule 8 (instruction -> IF ( condition ) instructions .)
    WHILE           reduce using rule 8 (instruction -> IF ( condition ) instructions .)
    BREAK           reduce using rule 8 (instruction -> IF ( condition ) instructions .)
    CONTINUE        reduce using rule 8 (instruction -> IF ( condition ) instructions .)
    RETURN          reduce using rule 8 (instruction -> IF ( condition ) instructions .)
    PRINT           reduce using rule 8 (instruction -> IF ( condition ) instructions .)
    ID              reduce using rule 8 (instruction -> IF ( condition ) instructions .)
    $end            reduce using rule 8 (instruction -> IF ( condition ) instructions .)
    }               reduce using rule 8 (instruction -> IF ( condition ) instructions .)
    ELSE            shift and go to state 91

  ! ELSE            [ reduce using rule 8 (instruction -> IF ( condition ) instructions .) ]
  ! IF              [ shift and go to state 7 ]
  ! FOR             [ shift and go to state 8 ]
  ! WHILE           [ shift and go to state 10 ]
  ! BREAK           [ shift and go to state 13 ]
  ! CONTINUE        [ shift and go to state 14 ]
  ! RETURN          [ shift and go to state 15 ]
  ! PRINT           [ shift and go to state 17 ]
  ! ID              [ shift and go to state 9 ]

    instruction                    shift and go to state 21
    statement                      shift and go to state 6
    assignment                     shift and go to state 11
    print_statement                shift and go to state 12
    variable                       shift and go to state 16
    element                        shift and go to state 18
    vector_element                 shift and go to state 19
    matrix_element                 shift and go to state 20

state 73

    (13) condition -> expression EQ expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    )               reduce using rule 13 (condition -> expression EQ expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 74

    (14) condition -> expression NEQ expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    )               reduce using rule 14 (condition -> expression NEQ expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 75

    (15) condition -> expression LE expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    )               reduce using rule 15 (condition -> expression LE expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 76

    (16) condition -> expression GE expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    )               reduce using rule 16 (condition -> expression GE expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 77

    (17) condition -> expression < expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    )               reduce using rule 17 (condition -> expression < expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 78

    (18) condition -> expression > expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    )               reduce using rule 18 (condition -> expression > expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 79

    (32) expression -> expression + expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    EQ              reduce using rule 32 (expression -> expression + expression .)
    NEQ             reduce using rule 32 (expression -> expression + expression .)
    LE              reduce using rule 32 (expression -> expression + expression .)
    GE              reduce using rule 32 (expression -> expression + expression .)
    <               reduce using rule 32 (expression -> expression + expression .)
    >               reduce using rule 32 (expression -> expression + expression .)
    +               reduce using rule 32 (expression -> expression + expression .)
    -               reduce using rule 32 (expression -> expression + expression .)
    DOTADD          reduce using rule 32 (expression -> expression + expression .)
    DOTSUB          reduce using rule 32 (expression -> expression + expression .)
    ;               reduce using rule 32 (expression -> expression + expression .)
    )               reduce using rule 32 (expression -> expression + expression .)
    :               reduce using rule 32 (expression -> expression + expression .)
    {               reduce using rule 32 (expression -> expression + expression .)
    IF              reduce using rule 32 (expression -> expression + expression .)
    FOR             reduce using rule 32 (expression -> expression + expression .)
    WHILE           reduce using rule 32 (expression -> expression + expression .)
    BREAK           reduce using rule 32 (expression -> expression + expression .)
    CONTINUE        reduce using rule 32 (expression -> expression + expression .)
    RETURN          reduce using rule 32 (expression -> expression + expression .)
    PRINT           reduce using rule 32 (expression -> expression + expression .)
    ID              reduce using rule 32 (expression -> expression + expression .)
    *               shift and go to state 60
    /               shift and go to state 61
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! *               [ reduce using rule 32 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 32 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 32 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 32 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]


state 80

    (33) expression -> expression - expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    EQ              reduce using rule 33 (expression -> expression - expression .)
    NEQ             reduce using rule 33 (expression -> expression - expression .)
    LE              reduce using rule 33 (expression -> expression - expression .)
    GE              reduce using rule 33 (expression -> expression - expression .)
    <               reduce using rule 33 (expression -> expression - expression .)
    >               reduce using rule 33 (expression -> expression - expression .)
    +               reduce using rule 33 (expression -> expression - expression .)
    -               reduce using rule 33 (expression -> expression - expression .)
    DOTADD          reduce using rule 33 (expression -> expression - expression .)
    DOTSUB          reduce using rule 33 (expression -> expression - expression .)
    ;               reduce using rule 33 (expression -> expression - expression .)
    )               reduce using rule 33 (expression -> expression - expression .)
    :               reduce using rule 33 (expression -> expression - expression .)
    {               reduce using rule 33 (expression -> expression - expression .)
    IF              reduce using rule 33 (expression -> expression - expression .)
    FOR             reduce using rule 33 (expression -> expression - expression .)
    WHILE           reduce using rule 33 (expression -> expression - expression .)
    BREAK           reduce using rule 33 (expression -> expression - expression .)
    CONTINUE        reduce using rule 33 (expression -> expression - expression .)
    RETURN          reduce using rule 33 (expression -> expression - expression .)
    PRINT           reduce using rule 33 (expression -> expression - expression .)
    ID              reduce using rule 33 (expression -> expression - expression .)
    *               shift and go to state 60
    /               shift and go to state 61
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! *               [ reduce using rule 33 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 33 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 33 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 33 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]


state 81

    (34) expression -> expression * expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    EQ              reduce using rule 34 (expression -> expression * expression .)
    NEQ             reduce using rule 34 (expression -> expression * expression .)
    LE              reduce using rule 34 (expression -> expression * expression .)
    GE              reduce using rule 34 (expression -> expression * expression .)
    <               reduce using rule 34 (expression -> expression * expression .)
    >               reduce using rule 34 (expression -> expression * expression .)
    +               reduce using rule 34 (expression -> expression * expression .)
    -               reduce using rule 34 (expression -> expression * expression .)
    *               reduce using rule 34 (expression -> expression * expression .)
    /               reduce using rule 34 (expression -> expression * expression .)
    DOTADD          reduce using rule 34 (expression -> expression * expression .)
    DOTSUB          reduce using rule 34 (expression -> expression * expression .)
    DOTMUL          reduce using rule 34 (expression -> expression * expression .)
    DOTDIV          reduce using rule 34 (expression -> expression * expression .)
    ;               reduce using rule 34 (expression -> expression * expression .)
    )               reduce using rule 34 (expression -> expression * expression .)
    :               reduce using rule 34 (expression -> expression * expression .)
    {               reduce using rule 34 (expression -> expression * expression .)
    IF              reduce using rule 34 (expression -> expression * expression .)
    FOR             reduce using rule 34 (expression -> expression * expression .)
    WHILE           reduce using rule 34 (expression -> expression * expression .)
    BREAK           reduce using rule 34 (expression -> expression * expression .)
    CONTINUE        reduce using rule 34 (expression -> expression * expression .)
    RETURN          reduce using rule 34 (expression -> expression * expression .)
    PRINT           reduce using rule 34 (expression -> expression * expression .)
    ID              reduce using rule 34 (expression -> expression * expression .)

  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! *               [ shift and go to state 60 ]
  ! /               [ shift and go to state 61 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]
  ! DOTMUL          [ shift and go to state 64 ]
  ! DOTDIV          [ shift and go to state 65 ]


state 82

    (35) expression -> expression / expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    EQ              reduce using rule 35 (expression -> expression / expression .)
    NEQ             reduce using rule 35 (expression -> expression / expression .)
    LE              reduce using rule 35 (expression -> expression / expression .)
    GE              reduce using rule 35 (expression -> expression / expression .)
    <               reduce using rule 35 (expression -> expression / expression .)
    >               reduce using rule 35 (expression -> expression / expression .)
    +               reduce using rule 35 (expression -> expression / expression .)
    -               reduce using rule 35 (expression -> expression / expression .)
    *               reduce using rule 35 (expression -> expression / expression .)
    /               reduce using rule 35 (expression -> expression / expression .)
    DOTADD          reduce using rule 35 (expression -> expression / expression .)
    DOTSUB          reduce using rule 35 (expression -> expression / expression .)
    DOTMUL          reduce using rule 35 (expression -> expression / expression .)
    DOTDIV          reduce using rule 35 (expression -> expression / expression .)
    ;               reduce using rule 35 (expression -> expression / expression .)
    )               reduce using rule 35 (expression -> expression / expression .)
    :               reduce using rule 35 (expression -> expression / expression .)
    {               reduce using rule 35 (expression -> expression / expression .)
    IF              reduce using rule 35 (expression -> expression / expression .)
    FOR             reduce using rule 35 (expression -> expression / expression .)
    WHILE           reduce using rule 35 (expression -> expression / expression .)
    BREAK           reduce using rule 35 (expression -> expression / expression .)
    CONTINUE        reduce using rule 35 (expression -> expression / expression .)
    RETURN          reduce using rule 35 (expression -> expression / expression .)
    PRINT           reduce using rule 35 (expression -> expression / expression .)
    ID              reduce using rule 35 (expression -> expression / expression .)

  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! *               [ shift and go to state 60 ]
  ! /               [ shift and go to state 61 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]
  ! DOTMUL          [ shift and go to state 64 ]
  ! DOTDIV          [ shift and go to state 65 ]


state 83

    (36) expression -> expression DOTADD expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    EQ              reduce using rule 36 (expression -> expression DOTADD expression .)
    NEQ             reduce using rule 36 (expression -> expression DOTADD expression .)
    LE              reduce using rule 36 (expression -> expression DOTADD expression .)
    GE              reduce using rule 36 (expression -> expression DOTADD expression .)
    <               reduce using rule 36 (expression -> expression DOTADD expression .)
    >               reduce using rule 36 (expression -> expression DOTADD expression .)
    +               reduce using rule 36 (expression -> expression DOTADD expression .)
    -               reduce using rule 36 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 36 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 36 (expression -> expression DOTADD expression .)
    ;               reduce using rule 36 (expression -> expression DOTADD expression .)
    )               reduce using rule 36 (expression -> expression DOTADD expression .)
    :               reduce using rule 36 (expression -> expression DOTADD expression .)
    {               reduce using rule 36 (expression -> expression DOTADD expression .)
    IF              reduce using rule 36 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 36 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 36 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 36 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 36 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 36 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 36 (expression -> expression DOTADD expression .)
    ID              reduce using rule 36 (expression -> expression DOTADD expression .)
    *               shift and go to state 60
    /               shift and go to state 61
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! *               [ reduce using rule 36 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 36 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 36 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 36 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]


state 84

    (37) expression -> expression DOTSUB expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    EQ              reduce using rule 37 (expression -> expression DOTSUB expression .)
    NEQ             reduce using rule 37 (expression -> expression DOTSUB expression .)
    LE              reduce using rule 37 (expression -> expression DOTSUB expression .)
    GE              reduce using rule 37 (expression -> expression DOTSUB expression .)
    <               reduce using rule 37 (expression -> expression DOTSUB expression .)
    >               reduce using rule 37 (expression -> expression DOTSUB expression .)
    +               reduce using rule 37 (expression -> expression DOTSUB expression .)
    -               reduce using rule 37 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 37 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 37 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 37 (expression -> expression DOTSUB expression .)
    )               reduce using rule 37 (expression -> expression DOTSUB expression .)
    :               reduce using rule 37 (expression -> expression DOTSUB expression .)
    {               reduce using rule 37 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 37 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 37 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 37 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 37 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 37 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 37 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 37 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 37 (expression -> expression DOTSUB expression .)
    *               shift and go to state 60
    /               shift and go to state 61
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65

  ! *               [ reduce using rule 37 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 37 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 37 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 37 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]


state 85

    (38) expression -> expression DOTMUL expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    EQ              reduce using rule 38 (expression -> expression DOTMUL expression .)
    NEQ             reduce using rule 38 (expression -> expression DOTMUL expression .)
    LE              reduce using rule 38 (expression -> expression DOTMUL expression .)
    GE              reduce using rule 38 (expression -> expression DOTMUL expression .)
    <               reduce using rule 38 (expression -> expression DOTMUL expression .)
    >               reduce using rule 38 (expression -> expression DOTMUL expression .)
    +               reduce using rule 38 (expression -> expression DOTMUL expression .)
    -               reduce using rule 38 (expression -> expression DOTMUL expression .)
    *               reduce using rule 38 (expression -> expression DOTMUL expression .)
    /               reduce using rule 38 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 38 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 38 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 38 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 38 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 38 (expression -> expression DOTMUL expression .)
    )               reduce using rule 38 (expression -> expression DOTMUL expression .)
    :               reduce using rule 38 (expression -> expression DOTMUL expression .)
    {               reduce using rule 38 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 38 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 38 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 38 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 38 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 38 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 38 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 38 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 38 (expression -> expression DOTMUL expression .)

  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! *               [ shift and go to state 60 ]
  ! /               [ shift and go to state 61 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]
  ! DOTMUL          [ shift and go to state 64 ]
  ! DOTDIV          [ shift and go to state 65 ]


state 86

    (39) expression -> expression DOTDIV expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    EQ              reduce using rule 39 (expression -> expression DOTDIV expression .)
    NEQ             reduce using rule 39 (expression -> expression DOTDIV expression .)
    LE              reduce using rule 39 (expression -> expression DOTDIV expression .)
    GE              reduce using rule 39 (expression -> expression DOTDIV expression .)
    <               reduce using rule 39 (expression -> expression DOTDIV expression .)
    >               reduce using rule 39 (expression -> expression DOTDIV expression .)
    +               reduce using rule 39 (expression -> expression DOTDIV expression .)
    -               reduce using rule 39 (expression -> expression DOTDIV expression .)
    *               reduce using rule 39 (expression -> expression DOTDIV expression .)
    /               reduce using rule 39 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 39 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 39 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 39 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 39 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 39 (expression -> expression DOTDIV expression .)
    )               reduce using rule 39 (expression -> expression DOTDIV expression .)
    :               reduce using rule 39 (expression -> expression DOTDIV expression .)
    {               reduce using rule 39 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 39 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 39 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 39 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 39 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 39 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 39 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 39 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 39 (expression -> expression DOTDIV expression .)

  ! +               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! *               [ shift and go to state 60 ]
  ! /               [ shift and go to state 61 ]
  ! DOTADD          [ shift and go to state 62 ]
  ! DOTSUB          [ shift and go to state 63 ]
  ! DOTMUL          [ shift and go to state 64 ]
  ! DOTDIV          [ shift and go to state 65 ]


state 87

    (10) instruction -> FOR ID = range instructions .
    (4) instructions -> instructions . instruction
    (7) instruction -> . statement ;
    (8) instruction -> . IF ( condition ) instructions
    (9) instruction -> . IF ( condition ) instructions ELSE instructions
    (10) instruction -> . FOR ID = range instructions
    (11) instruction -> . WHILE ( condition ) instructions
    (19) statement -> . assignment
    (20) statement -> . print_statement
    (46) statement -> . BREAK
    (47) statement -> . CONTINUE
    (48) statement -> . RETURN
    (21) assignment -> . variable = expression
    (22) assignment -> . variable ADDASSIGN expression
    (23) assignment -> . variable SUBASSIGN expression
    (24) assignment -> . variable MULASSIGN expression
    (25) assignment -> . variable DIVASSIGN expression
    (44) print_statement -> . PRINT STRING
    (45) print_statement -> . PRINT variable
    (26) variable -> . ID
    (27) variable -> . element
    (28) element -> . vector_element
    (29) element -> . matrix_element
    (30) vector_element -> . ID [ INT ]
    (31) matrix_element -> . ID [ INT , INT ]

    IF              reduce using rule 10 (instruction -> FOR ID = range instructions .)
    FOR             reduce using rule 10 (instruction -> FOR ID = range instructions .)
    WHILE           reduce using rule 10 (instruction -> FOR ID = range instructions .)
    BREAK           reduce using rule 10 (instruction -> FOR ID = range instructions .)
    CONTINUE        reduce using rule 10 (instruction -> FOR ID = range instructions .)
    RETURN          reduce using rule 10 (instruction -> FOR ID = range instructions .)
    PRINT           reduce using rule 10 (instruction -> FOR ID = range instructions .)
    ID              reduce using rule 10 (instruction -> FOR ID = range instructions .)
    $end            reduce using rule 10 (instruction -> FOR ID = range instructions .)
    }               reduce using rule 10 (instruction -> FOR ID = range instructions .)
    ELSE            reduce using rule 10 (instruction -> FOR ID = range instructions .)

  ! IF              [ shift and go to state 7 ]
  ! FOR             [ shift and go to state 8 ]
  ! WHILE           [ shift and go to state 10 ]
  ! BREAK           [ shift and go to state 13 ]
  ! CONTINUE        [ shift and go to state 14 ]
  ! RETURN          [ shift and go to state 15 ]
  ! PRINT           [ shift and go to state 17 ]
  ! ID              [ shift and go to state 9 ]

    instruction                    shift and go to state 21
    statement                      shift and go to state 6
    assignment                     shift and go to state 11
    print_statement                shift and go to state 12
    variable                       shift and go to state 16
    element                        shift and go to state 18
    vector_element                 shift and go to state 19
    matrix_element                 shift and go to state 20

state 88

    (12) range -> expression : . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . ( expression )
    (41) expression -> . number
    (42) number -> . INT
    (43) number -> . FLOAT

    (               shift and go to state 36
    INT             shift and go to state 40
    FLOAT           shift and go to state 41

    expression                     shift and go to state 92
    number                         shift and go to state 39

state 89

    (31) matrix_element -> ID [ INT , INT . ]

    ]               shift and go to state 93


state 90

    (11) instruction -> WHILE ( condition ) instructions .
    (4) instructions -> instructions . instruction
    (7) instruction -> . statement ;
    (8) instruction -> . IF ( condition ) instructions
    (9) instruction -> . IF ( condition ) instructions ELSE instructions
    (10) instruction -> . FOR ID = range instructions
    (11) instruction -> . WHILE ( condition ) instructions
    (19) statement -> . assignment
    (20) statement -> . print_statement
    (46) statement -> . BREAK
    (47) statement -> . CONTINUE
    (48) statement -> . RETURN
    (21) assignment -> . variable = expression
    (22) assignment -> . variable ADDASSIGN expression
    (23) assignment -> . variable SUBASSIGN expression
    (24) assignment -> . variable MULASSIGN expression
    (25) assignment -> . variable DIVASSIGN expression
    (44) print_statement -> . PRINT STRING
    (45) print_statement -> . PRINT variable
    (26) variable -> . ID
    (27) variable -> . element
    (28) element -> . vector_element
    (29) element -> . matrix_element
    (30) vector_element -> . ID [ INT ]
    (31) matrix_element -> . ID [ INT , INT ]

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    $end            reduce using rule 11 (instruction -> WHILE ( condition ) instructions .)
    }               reduce using rule 11 (instruction -> WHILE ( condition ) instructions .)
    ELSE            reduce using rule 11 (instruction -> WHILE ( condition ) instructions .)
    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 17
    ID              shift and go to state 9

  ! IF              [ reduce using rule 11 (instruction -> WHILE ( condition ) instructions .) ]
  ! FOR             [ reduce using rule 11 (instruction -> WHILE ( condition ) instructions .) ]
  ! WHILE           [ reduce using rule 11 (instruction -> WHILE ( condition ) instructions .) ]
  ! BREAK           [ reduce using rule 11 (instruction -> WHILE ( condition ) instructions .) ]
  ! CONTINUE        [ reduce using rule 11 (instruction -> WHILE ( condition ) instructions .) ]
  ! RETURN          [ reduce using rule 11 (instruction -> WHILE ( condition ) instructions .) ]
  ! PRINT           [ reduce using rule 11 (instruction -> WHILE ( condition ) instructions .) ]
  ! ID              [ reduce using rule 11 (instruction -> WHILE ( condition ) instructions .) ]

    instruction                    shift and go to state 21
    statement                      shift and go to state 6
    assignment                     shift and go to state 11
    print_statement                shift and go to state 12
    variable                       shift and go to state 16
    element                        shift and go to state 18
    vector_element                 shift and go to state 19
    matrix_element                 shift and go to state 20

state 91

    (9) instruction -> IF ( condition ) instructions ELSE . instructions
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instructions -> . { instructions }
    (7) instruction -> . statement ;
    (8) instruction -> . IF ( condition ) instructions
    (9) instruction -> . IF ( condition ) instructions ELSE instructions
    (10) instruction -> . FOR ID = range instructions
    (11) instruction -> . WHILE ( condition ) instructions
    (19) statement -> . assignment
    (20) statement -> . print_statement
    (46) statement -> . BREAK
    (47) statement -> . CONTINUE
    (48) statement -> . RETURN
    (21) assignment -> . variable = expression
    (22) assignment -> . variable ADDASSIGN expression
    (23) assignment -> . variable SUBASSIGN expression
    (24) assignment -> . variable MULASSIGN expression
    (25) assignment -> . variable DIVASSIGN expression
    (44) print_statement -> . PRINT STRING
    (45) print_statement -> . PRINT variable
    (26) variable -> . ID
    (27) variable -> . element
    (28) element -> . vector_element
    (29) element -> . matrix_element
    (30) vector_element -> . ID [ INT ]
    (31) matrix_element -> . ID [ INT , INT ]

    {               shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 10
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINT           shift and go to state 17
    ID              shift and go to state 9

    instructions                   shift and go to state 94
    instruction                    shift and go to state 4
    statement                      shift and go to state 6
    assignment                     shift and go to state 11
    print_statement                shift and go to state 12
    variable                       shift and go to state 16
    element                        shift and go to state 18
    vector_element                 shift and go to state 19
    matrix_element                 shift and go to state 20

state 92

    (12) range -> expression : expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression

    {               reduce using rule 12 (range -> expression : expression .)
    IF              reduce using rule 12 (range -> expression : expression .)
    FOR             reduce using rule 12 (range -> expression : expression .)
    WHILE           reduce using rule 12 (range -> expression : expression .)
    BREAK           reduce using rule 12 (range -> expression : expression .)
    CONTINUE        reduce using rule 12 (range -> expression : expression .)
    RETURN          reduce using rule 12 (range -> expression : expression .)
    PRINT           reduce using rule 12 (range -> expression : expression .)
    ID              reduce using rule 12 (range -> expression : expression .)
    +               shift and go to state 58
    -               shift and go to state 59
    *               shift and go to state 60
    /               shift and go to state 61
    DOTADD          shift and go to state 62
    DOTSUB          shift and go to state 63
    DOTMUL          shift and go to state 64
    DOTDIV          shift and go to state 65


state 93

    (31) matrix_element -> ID [ INT , INT ] .

    =               reduce using rule 31 (matrix_element -> ID [ INT , INT ] .)
    ADDASSIGN       reduce using rule 31 (matrix_element -> ID [ INT , INT ] .)
    SUBASSIGN       reduce using rule 31 (matrix_element -> ID [ INT , INT ] .)
    MULASSIGN       reduce using rule 31 (matrix_element -> ID [ INT , INT ] .)
    DIVASSIGN       reduce using rule 31 (matrix_element -> ID [ INT , INT ] .)
    ;               reduce using rule 31 (matrix_element -> ID [ INT , INT ] .)


state 94

    (9) instruction -> IF ( condition ) instructions ELSE instructions .
    (4) instructions -> instructions . instruction
    (7) instruction -> . statement ;
    (8) instruction -> . IF ( condition ) instructions
    (9) instruction -> . IF ( condition ) instructions ELSE instructions
    (10) instruction -> . FOR ID = range instructions
    (11) instruction -> . WHILE ( condition ) instructions
    (19) statement -> . assignment
    (20) statement -> . print_statement
    (46) statement -> . BREAK
    (47) statement -> . CONTINUE
    (48) statement -> . RETURN
    (21) assignment -> . variable = expression
    (22) assignment -> . variable ADDASSIGN expression
    (23) assignment -> . variable SUBASSIGN expression
    (24) assignment -> . variable MULASSIGN expression
    (25) assignment -> . variable DIVASSIGN expression
    (44) print_statement -> . PRINT STRING
    (45) print_statement -> . PRINT variable
    (26) variable -> . ID
    (27) variable -> . element
    (28) element -> . vector_element
    (29) element -> . matrix_element
    (30) vector_element -> . ID [ INT ]
    (31) matrix_element -> . ID [ INT , INT ]

    IF              reduce using rule 9 (instruction -> IF ( condition ) instructions ELSE instructions .)
    FOR             reduce using rule 9 (instruction -> IF ( condition ) instructions ELSE instructions .)
    WHILE           reduce using rule 9 (instruction -> IF ( condition ) instructions ELSE instructions .)
    BREAK           reduce using rule 9 (instruction -> IF ( condition ) instructions ELSE instructions .)
    CONTINUE        reduce using rule 9 (instruction -> IF ( condition ) instructions ELSE instructions .)
    RETURN          reduce using rule 9 (instruction -> IF ( condition ) instructions ELSE instructions .)
    PRINT           reduce using rule 9 (instruction -> IF ( condition ) instructions ELSE instructions .)
    ID              reduce using rule 9 (instruction -> IF ( condition ) instructions ELSE instructions .)
    $end            reduce using rule 9 (instruction -> IF ( condition ) instructions ELSE instructions .)
    }               reduce using rule 9 (instruction -> IF ( condition ) instructions ELSE instructions .)
    ELSE            reduce using rule 9 (instruction -> IF ( condition ) instructions ELSE instructions .)

  ! IF              [ shift and go to state 7 ]
  ! FOR             [ shift and go to state 8 ]
  ! WHILE           [ shift and go to state 10 ]
  ! BREAK           [ shift and go to state 13 ]
  ! CONTINUE        [ shift and go to state 14 ]
  ! RETURN          [ shift and go to state 15 ]
  ! PRINT           [ shift and go to state 17 ]
  ! ID              [ shift and go to state 9 ]

    instruction                    shift and go to state 21
    statement                      shift and go to state 6
    assignment                     shift and go to state 11
    print_statement                shift and go to state 12
    variable                       shift and go to state 16
    element                        shift and go to state 18
    vector_element                 shift and go to state 19
    matrix_element                 shift and go to state 20
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IF in state 90 resolved as shift
WARNING: shift/reduce conflict for FOR in state 90 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 90 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 90 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 90 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 90 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
