Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     empty -> <empty>
Rule 2     program -> instructions_opt
Rule 3     instructions_opt -> instructions
Rule 4     instructions_opt -> empty
Rule 5     instructions -> instructions instruction
Rule 6     instructions -> instruction
Rule 7     instructions -> { instructions }
Rule 8     instruction -> statement ;
Rule 9     instruction -> IF ( condition ) instructions
Rule 10    instruction -> IF ( condition ) instructions ELSE instructions
Rule 11    instruction -> FOR ID = range instructions
Rule 12    instruction -> WHILE ( condition ) instructions
Rule 13    range -> expression : expression
Rule 14    condition -> expression EQ expression
Rule 15    condition -> expression NEQ expression
Rule 16    condition -> expression LE expression
Rule 17    condition -> expression GE expression
Rule 18    condition -> expression < expression
Rule 19    condition -> expression > expression
Rule 20    statement -> assignment
Rule 21    statement -> print_statement
Rule 22    assignment -> variable = expression
Rule 23    assignment -> variable = matrix_function
Rule 24    assignment -> variable = matrix
Rule 25    assignment -> variable ADDASSIGN expression
Rule 26    assignment -> variable SUBASSIGN expression
Rule 27    assignment -> variable MULASSIGN expression
Rule 28    assignment -> variable DIVASSIGN expression
Rule 29    matrix_function -> matrix_function_name ( INT )
Rule 30    matrix_function_name -> ZEROS
Rule 31    matrix_function_name -> ONES
Rule 32    matrix_function_name -> EYE
Rule 33    matrix -> [ vectors ]
Rule 34    vectors -> vectors , vector
Rule 35    vectors -> vector
Rule 36    vector -> [ variables ]
Rule 37    variables -> variables , variable
Rule 38    variables -> variable
Rule 39    variable -> ID
Rule 40    variable -> element
Rule 41    variable -> number
Rule 42    element -> vector_element
Rule 43    element -> matrix_element
Rule 44    vector_element -> ID [ INT ]
Rule 45    matrix_element -> ID [ INT , INT ]
Rule 46    expression -> expression + expression
Rule 47    expression -> expression - expression
Rule 48    expression -> expression * expression
Rule 49    expression -> expression / expression
Rule 50    expression -> expression DOTADD expression
Rule 51    expression -> expression DOTSUB expression
Rule 52    expression -> expression DOTMUL expression
Rule 53    expression -> expression DOTDIV expression
Rule 54    expression -> expression '
Rule 55    expression -> - expression
Rule 56    expression -> ( expression )
Rule 57    expression -> variable
Rule 58    number -> INT
Rule 59    number -> FLOAT
Rule 60    print_statement -> PRINT printables
Rule 61    printables -> printables , printable
Rule 62    printables -> printable
Rule 63    printable -> STRING
Rule 64    printable -> variable
Rule 65    statement -> BREAK
Rule 66    statement -> CONTINUE
Rule 67    statement -> RETURN variable

Terminals, with rules where they appear

'                    : 54
(                    : 9 10 12 29 56
)                    : 9 10 12 29 56
*                    : 48
+                    : 46
,                    : 34 37 45 61
-                    : 47 55
/                    : 49
:                    : 13
;                    : 8
<                    : 18
=                    : 11 22 23 24
>                    : 19
ADDASSIGN            : 25
BREAK                : 65
CONTINUE             : 66
DIVASSIGN            : 28
DOTADD               : 50
DOTDIV               : 53
DOTMUL               : 52
DOTSUB               : 51
ELSE                 : 10
EQ                   : 14
EYE                  : 32
FLOAT                : 59
FOR                  : 11
GE                   : 17
ID                   : 11 39 44 45
IF                   : 9 10
INT                  : 29 44 45 45 58
LE                   : 16
MULASSIGN            : 27
NEQ                  : 15
ONES                 : 31
PRINT                : 60
RETURN               : 67
STRING               : 63
SUBASSIGN            : 26
WHILE                : 12
ZEROS                : 30
[                    : 33 36 44 45
]                    : 33 36 44 45
error                : 
{                    : 7
}                    : 7

Nonterminals, with rules where they appear

assignment           : 20
condition            : 9 10 12
element              : 40
empty                : 4
expression           : 13 13 14 14 15 15 16 16 17 17 18 18 19 19 22 25 26 27 28 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 55 56
instruction          : 5 6
instructions         : 3 5 7 9 10 10 11 12
instructions_opt     : 2
matrix               : 24
matrix_element       : 43
matrix_function      : 23
matrix_function_name : 29
number               : 41
print_statement      : 21
printable            : 61 62
printables           : 60 61
program              : 0
range                : 11
statement            : 8
variable             : 22 23 24 25 26 27 28 37 38 57 64 67
variables            : 36 37
vector               : 34 35
vector_element       : 42
vectors              : 33 34

Parsing method: LALR

state 0

    (0) S' -> . program
    (2) program -> . instructions_opt
    (3) instructions_opt -> . instructions
    (4) instructions_opt -> . empty
    (5) instructions -> . instructions instruction
    (6) instructions -> . instruction
    (7) instructions -> . { instructions }
    (1) empty -> .
    (8) instruction -> . statement ;
    (9) instruction -> . IF ( condition ) instructions
    (10) instruction -> . IF ( condition ) instructions ELSE instructions
    (11) instruction -> . FOR ID = range instructions
    (12) instruction -> . WHILE ( condition ) instructions
    (20) statement -> . assignment
    (21) statement -> . print_statement
    (65) statement -> . BREAK
    (66) statement -> . CONTINUE
    (67) statement -> . RETURN variable
    (22) assignment -> . variable = expression
    (23) assignment -> . variable = matrix_function
    (24) assignment -> . variable = matrix
    (25) assignment -> . variable ADDASSIGN expression
    (26) assignment -> . variable SUBASSIGN expression
    (27) assignment -> . variable MULASSIGN expression
    (28) assignment -> . variable DIVASSIGN expression
    (60) print_statement -> . PRINT printables
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    {               shift and go to state 6
    $end            reduce using rule 1 (empty -> .)
    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 11
    BREAK           shift and go to state 14
    CONTINUE        shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 18
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    empty                          shift and go to state 4
    instruction                    shift and go to state 5
    statement                      shift and go to state 7
    assignment                     shift and go to state 12
    print_statement                shift and go to state 13
    variable                       shift and go to state 17
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 1

    (0) S' -> program .



state 2

    (2) program -> instructions_opt .

    $end            reduce using rule 2 (program -> instructions_opt .)


state 3

    (3) instructions_opt -> instructions .
    (5) instructions -> instructions . instruction
    (8) instruction -> . statement ;
    (9) instruction -> . IF ( condition ) instructions
    (10) instruction -> . IF ( condition ) instructions ELSE instructions
    (11) instruction -> . FOR ID = range instructions
    (12) instruction -> . WHILE ( condition ) instructions
    (20) statement -> . assignment
    (21) statement -> . print_statement
    (65) statement -> . BREAK
    (66) statement -> . CONTINUE
    (67) statement -> . RETURN variable
    (22) assignment -> . variable = expression
    (23) assignment -> . variable = matrix_function
    (24) assignment -> . variable = matrix
    (25) assignment -> . variable ADDASSIGN expression
    (26) assignment -> . variable SUBASSIGN expression
    (27) assignment -> . variable MULASSIGN expression
    (28) assignment -> . variable DIVASSIGN expression
    (60) print_statement -> . PRINT printables
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    $end            reduce using rule 3 (instructions_opt -> instructions .)
    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 11
    BREAK           shift and go to state 14
    CONTINUE        shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 18
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    instruction                    shift and go to state 25
    statement                      shift and go to state 7
    assignment                     shift and go to state 12
    print_statement                shift and go to state 13
    variable                       shift and go to state 17
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 4

    (4) instructions_opt -> empty .

    $end            reduce using rule 4 (instructions_opt -> empty .)


state 5

    (6) instructions -> instruction .

    IF              reduce using rule 6 (instructions -> instruction .)
    FOR             reduce using rule 6 (instructions -> instruction .)
    WHILE           reduce using rule 6 (instructions -> instruction .)
    BREAK           reduce using rule 6 (instructions -> instruction .)
    CONTINUE        reduce using rule 6 (instructions -> instruction .)
    RETURN          reduce using rule 6 (instructions -> instruction .)
    PRINT           reduce using rule 6 (instructions -> instruction .)
    ID              reduce using rule 6 (instructions -> instruction .)
    INT             reduce using rule 6 (instructions -> instruction .)
    FLOAT           reduce using rule 6 (instructions -> instruction .)
    $end            reduce using rule 6 (instructions -> instruction .)
    }               reduce using rule 6 (instructions -> instruction .)
    ELSE            reduce using rule 6 (instructions -> instruction .)


state 6

    (7) instructions -> { . instructions }
    (5) instructions -> . instructions instruction
    (6) instructions -> . instruction
    (7) instructions -> . { instructions }
    (8) instruction -> . statement ;
    (9) instruction -> . IF ( condition ) instructions
    (10) instruction -> . IF ( condition ) instructions ELSE instructions
    (11) instruction -> . FOR ID = range instructions
    (12) instruction -> . WHILE ( condition ) instructions
    (20) statement -> . assignment
    (21) statement -> . print_statement
    (65) statement -> . BREAK
    (66) statement -> . CONTINUE
    (67) statement -> . RETURN variable
    (22) assignment -> . variable = expression
    (23) assignment -> . variable = matrix_function
    (24) assignment -> . variable = matrix
    (25) assignment -> . variable ADDASSIGN expression
    (26) assignment -> . variable SUBASSIGN expression
    (27) assignment -> . variable MULASSIGN expression
    (28) assignment -> . variable DIVASSIGN expression
    (60) print_statement -> . PRINT printables
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    {               shift and go to state 6
    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 11
    BREAK           shift and go to state 14
    CONTINUE        shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 18
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    instructions                   shift and go to state 26
    instruction                    shift and go to state 5
    statement                      shift and go to state 7
    assignment                     shift and go to state 12
    print_statement                shift and go to state 13
    variable                       shift and go to state 17
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 7

    (8) instruction -> statement . ;

    ;               shift and go to state 27


state 8

    (9) instruction -> IF . ( condition ) instructions
    (10) instruction -> IF . ( condition ) instructions ELSE instructions

    (               shift and go to state 28


state 9

    (11) instruction -> FOR . ID = range instructions

    ID              shift and go to state 29


state 10

    (39) variable -> ID .
    (44) vector_element -> ID . [ INT ]
    (45) matrix_element -> ID . [ INT , INT ]

    =               reduce using rule 39 (variable -> ID .)
    ADDASSIGN       reduce using rule 39 (variable -> ID .)
    SUBASSIGN       reduce using rule 39 (variable -> ID .)
    MULASSIGN       reduce using rule 39 (variable -> ID .)
    DIVASSIGN       reduce using rule 39 (variable -> ID .)
    ;               reduce using rule 39 (variable -> ID .)
    ,               reduce using rule 39 (variable -> ID .)
    EQ              reduce using rule 39 (variable -> ID .)
    NEQ             reduce using rule 39 (variable -> ID .)
    LE              reduce using rule 39 (variable -> ID .)
    GE              reduce using rule 39 (variable -> ID .)
    <               reduce using rule 39 (variable -> ID .)
    >               reduce using rule 39 (variable -> ID .)
    +               reduce using rule 39 (variable -> ID .)
    -               reduce using rule 39 (variable -> ID .)
    *               reduce using rule 39 (variable -> ID .)
    /               reduce using rule 39 (variable -> ID .)
    DOTADD          reduce using rule 39 (variable -> ID .)
    DOTSUB          reduce using rule 39 (variable -> ID .)
    DOTMUL          reduce using rule 39 (variable -> ID .)
    DOTDIV          reduce using rule 39 (variable -> ID .)
    '               reduce using rule 39 (variable -> ID .)
    )               reduce using rule 39 (variable -> ID .)
    :               reduce using rule 39 (variable -> ID .)
    {               reduce using rule 39 (variable -> ID .)
    IF              reduce using rule 39 (variable -> ID .)
    FOR             reduce using rule 39 (variable -> ID .)
    WHILE           reduce using rule 39 (variable -> ID .)
    BREAK           reduce using rule 39 (variable -> ID .)
    CONTINUE        reduce using rule 39 (variable -> ID .)
    RETURN          reduce using rule 39 (variable -> ID .)
    PRINT           reduce using rule 39 (variable -> ID .)
    ID              reduce using rule 39 (variable -> ID .)
    INT             reduce using rule 39 (variable -> ID .)
    FLOAT           reduce using rule 39 (variable -> ID .)
    ]               reduce using rule 39 (variable -> ID .)
    [               shift and go to state 30


state 11

    (12) instruction -> WHILE . ( condition ) instructions

    (               shift and go to state 31


state 12

    (20) statement -> assignment .

    ;               reduce using rule 20 (statement -> assignment .)


state 13

    (21) statement -> print_statement .

    ;               reduce using rule 21 (statement -> print_statement .)


state 14

    (65) statement -> BREAK .

    ;               reduce using rule 65 (statement -> BREAK .)


state 15

    (66) statement -> CONTINUE .

    ;               reduce using rule 66 (statement -> CONTINUE .)


state 16

    (67) statement -> RETURN . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    variable                       shift and go to state 32
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 17

    (22) assignment -> variable . = expression
    (23) assignment -> variable . = matrix_function
    (24) assignment -> variable . = matrix
    (25) assignment -> variable . ADDASSIGN expression
    (26) assignment -> variable . SUBASSIGN expression
    (27) assignment -> variable . MULASSIGN expression
    (28) assignment -> variable . DIVASSIGN expression

    =               shift and go to state 33
    ADDASSIGN       shift and go to state 34
    SUBASSIGN       shift and go to state 35
    MULASSIGN       shift and go to state 36
    DIVASSIGN       shift and go to state 37


state 18

    (60) print_statement -> PRINT . printables
    (61) printables -> . printables , printable
    (62) printables -> . printable
    (63) printable -> . STRING
    (64) printable -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    STRING          shift and go to state 40
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    printables                     shift and go to state 38
    printable                      shift and go to state 39
    variable                       shift and go to state 41
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 19

    (40) variable -> element .

    =               reduce using rule 40 (variable -> element .)
    ADDASSIGN       reduce using rule 40 (variable -> element .)
    SUBASSIGN       reduce using rule 40 (variable -> element .)
    MULASSIGN       reduce using rule 40 (variable -> element .)
    DIVASSIGN       reduce using rule 40 (variable -> element .)
    ;               reduce using rule 40 (variable -> element .)
    ,               reduce using rule 40 (variable -> element .)
    EQ              reduce using rule 40 (variable -> element .)
    NEQ             reduce using rule 40 (variable -> element .)
    LE              reduce using rule 40 (variable -> element .)
    GE              reduce using rule 40 (variable -> element .)
    <               reduce using rule 40 (variable -> element .)
    >               reduce using rule 40 (variable -> element .)
    +               reduce using rule 40 (variable -> element .)
    -               reduce using rule 40 (variable -> element .)
    *               reduce using rule 40 (variable -> element .)
    /               reduce using rule 40 (variable -> element .)
    DOTADD          reduce using rule 40 (variable -> element .)
    DOTSUB          reduce using rule 40 (variable -> element .)
    DOTMUL          reduce using rule 40 (variable -> element .)
    DOTDIV          reduce using rule 40 (variable -> element .)
    '               reduce using rule 40 (variable -> element .)
    )               reduce using rule 40 (variable -> element .)
    :               reduce using rule 40 (variable -> element .)
    {               reduce using rule 40 (variable -> element .)
    IF              reduce using rule 40 (variable -> element .)
    FOR             reduce using rule 40 (variable -> element .)
    WHILE           reduce using rule 40 (variable -> element .)
    BREAK           reduce using rule 40 (variable -> element .)
    CONTINUE        reduce using rule 40 (variable -> element .)
    RETURN          reduce using rule 40 (variable -> element .)
    PRINT           reduce using rule 40 (variable -> element .)
    ID              reduce using rule 40 (variable -> element .)
    INT             reduce using rule 40 (variable -> element .)
    FLOAT           reduce using rule 40 (variable -> element .)
    ]               reduce using rule 40 (variable -> element .)


state 20

    (41) variable -> number .

    =               reduce using rule 41 (variable -> number .)
    ADDASSIGN       reduce using rule 41 (variable -> number .)
    SUBASSIGN       reduce using rule 41 (variable -> number .)
    MULASSIGN       reduce using rule 41 (variable -> number .)
    DIVASSIGN       reduce using rule 41 (variable -> number .)
    ;               reduce using rule 41 (variable -> number .)
    ,               reduce using rule 41 (variable -> number .)
    EQ              reduce using rule 41 (variable -> number .)
    NEQ             reduce using rule 41 (variable -> number .)
    LE              reduce using rule 41 (variable -> number .)
    GE              reduce using rule 41 (variable -> number .)
    <               reduce using rule 41 (variable -> number .)
    >               reduce using rule 41 (variable -> number .)
    +               reduce using rule 41 (variable -> number .)
    -               reduce using rule 41 (variable -> number .)
    *               reduce using rule 41 (variable -> number .)
    /               reduce using rule 41 (variable -> number .)
    DOTADD          reduce using rule 41 (variable -> number .)
    DOTSUB          reduce using rule 41 (variable -> number .)
    DOTMUL          reduce using rule 41 (variable -> number .)
    DOTDIV          reduce using rule 41 (variable -> number .)
    '               reduce using rule 41 (variable -> number .)
    )               reduce using rule 41 (variable -> number .)
    :               reduce using rule 41 (variable -> number .)
    {               reduce using rule 41 (variable -> number .)
    IF              reduce using rule 41 (variable -> number .)
    FOR             reduce using rule 41 (variable -> number .)
    WHILE           reduce using rule 41 (variable -> number .)
    BREAK           reduce using rule 41 (variable -> number .)
    CONTINUE        reduce using rule 41 (variable -> number .)
    RETURN          reduce using rule 41 (variable -> number .)
    PRINT           reduce using rule 41 (variable -> number .)
    ID              reduce using rule 41 (variable -> number .)
    INT             reduce using rule 41 (variable -> number .)
    FLOAT           reduce using rule 41 (variable -> number .)
    ]               reduce using rule 41 (variable -> number .)


state 21

    (42) element -> vector_element .

    =               reduce using rule 42 (element -> vector_element .)
    ADDASSIGN       reduce using rule 42 (element -> vector_element .)
    SUBASSIGN       reduce using rule 42 (element -> vector_element .)
    MULASSIGN       reduce using rule 42 (element -> vector_element .)
    DIVASSIGN       reduce using rule 42 (element -> vector_element .)
    ;               reduce using rule 42 (element -> vector_element .)
    ,               reduce using rule 42 (element -> vector_element .)
    EQ              reduce using rule 42 (element -> vector_element .)
    NEQ             reduce using rule 42 (element -> vector_element .)
    LE              reduce using rule 42 (element -> vector_element .)
    GE              reduce using rule 42 (element -> vector_element .)
    <               reduce using rule 42 (element -> vector_element .)
    >               reduce using rule 42 (element -> vector_element .)
    +               reduce using rule 42 (element -> vector_element .)
    -               reduce using rule 42 (element -> vector_element .)
    *               reduce using rule 42 (element -> vector_element .)
    /               reduce using rule 42 (element -> vector_element .)
    DOTADD          reduce using rule 42 (element -> vector_element .)
    DOTSUB          reduce using rule 42 (element -> vector_element .)
    DOTMUL          reduce using rule 42 (element -> vector_element .)
    DOTDIV          reduce using rule 42 (element -> vector_element .)
    '               reduce using rule 42 (element -> vector_element .)
    )               reduce using rule 42 (element -> vector_element .)
    :               reduce using rule 42 (element -> vector_element .)
    {               reduce using rule 42 (element -> vector_element .)
    IF              reduce using rule 42 (element -> vector_element .)
    FOR             reduce using rule 42 (element -> vector_element .)
    WHILE           reduce using rule 42 (element -> vector_element .)
    BREAK           reduce using rule 42 (element -> vector_element .)
    CONTINUE        reduce using rule 42 (element -> vector_element .)
    RETURN          reduce using rule 42 (element -> vector_element .)
    PRINT           reduce using rule 42 (element -> vector_element .)
    ID              reduce using rule 42 (element -> vector_element .)
    INT             reduce using rule 42 (element -> vector_element .)
    FLOAT           reduce using rule 42 (element -> vector_element .)
    ]               reduce using rule 42 (element -> vector_element .)


state 22

    (43) element -> matrix_element .

    =               reduce using rule 43 (element -> matrix_element .)
    ADDASSIGN       reduce using rule 43 (element -> matrix_element .)
    SUBASSIGN       reduce using rule 43 (element -> matrix_element .)
    MULASSIGN       reduce using rule 43 (element -> matrix_element .)
    DIVASSIGN       reduce using rule 43 (element -> matrix_element .)
    ;               reduce using rule 43 (element -> matrix_element .)
    ,               reduce using rule 43 (element -> matrix_element .)
    EQ              reduce using rule 43 (element -> matrix_element .)
    NEQ             reduce using rule 43 (element -> matrix_element .)
    LE              reduce using rule 43 (element -> matrix_element .)
    GE              reduce using rule 43 (element -> matrix_element .)
    <               reduce using rule 43 (element -> matrix_element .)
    >               reduce using rule 43 (element -> matrix_element .)
    +               reduce using rule 43 (element -> matrix_element .)
    -               reduce using rule 43 (element -> matrix_element .)
    *               reduce using rule 43 (element -> matrix_element .)
    /               reduce using rule 43 (element -> matrix_element .)
    DOTADD          reduce using rule 43 (element -> matrix_element .)
    DOTSUB          reduce using rule 43 (element -> matrix_element .)
    DOTMUL          reduce using rule 43 (element -> matrix_element .)
    DOTDIV          reduce using rule 43 (element -> matrix_element .)
    '               reduce using rule 43 (element -> matrix_element .)
    )               reduce using rule 43 (element -> matrix_element .)
    :               reduce using rule 43 (element -> matrix_element .)
    {               reduce using rule 43 (element -> matrix_element .)
    IF              reduce using rule 43 (element -> matrix_element .)
    FOR             reduce using rule 43 (element -> matrix_element .)
    WHILE           reduce using rule 43 (element -> matrix_element .)
    BREAK           reduce using rule 43 (element -> matrix_element .)
    CONTINUE        reduce using rule 43 (element -> matrix_element .)
    RETURN          reduce using rule 43 (element -> matrix_element .)
    PRINT           reduce using rule 43 (element -> matrix_element .)
    ID              reduce using rule 43 (element -> matrix_element .)
    INT             reduce using rule 43 (element -> matrix_element .)
    FLOAT           reduce using rule 43 (element -> matrix_element .)
    ]               reduce using rule 43 (element -> matrix_element .)


state 23

    (58) number -> INT .

    =               reduce using rule 58 (number -> INT .)
    ADDASSIGN       reduce using rule 58 (number -> INT .)
    SUBASSIGN       reduce using rule 58 (number -> INT .)
    MULASSIGN       reduce using rule 58 (number -> INT .)
    DIVASSIGN       reduce using rule 58 (number -> INT .)
    ;               reduce using rule 58 (number -> INT .)
    ,               reduce using rule 58 (number -> INT .)
    EQ              reduce using rule 58 (number -> INT .)
    NEQ             reduce using rule 58 (number -> INT .)
    LE              reduce using rule 58 (number -> INT .)
    GE              reduce using rule 58 (number -> INT .)
    <               reduce using rule 58 (number -> INT .)
    >               reduce using rule 58 (number -> INT .)
    +               reduce using rule 58 (number -> INT .)
    -               reduce using rule 58 (number -> INT .)
    *               reduce using rule 58 (number -> INT .)
    /               reduce using rule 58 (number -> INT .)
    DOTADD          reduce using rule 58 (number -> INT .)
    DOTSUB          reduce using rule 58 (number -> INT .)
    DOTMUL          reduce using rule 58 (number -> INT .)
    DOTDIV          reduce using rule 58 (number -> INT .)
    '               reduce using rule 58 (number -> INT .)
    )               reduce using rule 58 (number -> INT .)
    :               reduce using rule 58 (number -> INT .)
    {               reduce using rule 58 (number -> INT .)
    IF              reduce using rule 58 (number -> INT .)
    FOR             reduce using rule 58 (number -> INT .)
    WHILE           reduce using rule 58 (number -> INT .)
    BREAK           reduce using rule 58 (number -> INT .)
    CONTINUE        reduce using rule 58 (number -> INT .)
    RETURN          reduce using rule 58 (number -> INT .)
    PRINT           reduce using rule 58 (number -> INT .)
    ID              reduce using rule 58 (number -> INT .)
    INT             reduce using rule 58 (number -> INT .)
    FLOAT           reduce using rule 58 (number -> INT .)
    ]               reduce using rule 58 (number -> INT .)


state 24

    (59) number -> FLOAT .

    =               reduce using rule 59 (number -> FLOAT .)
    ADDASSIGN       reduce using rule 59 (number -> FLOAT .)
    SUBASSIGN       reduce using rule 59 (number -> FLOAT .)
    MULASSIGN       reduce using rule 59 (number -> FLOAT .)
    DIVASSIGN       reduce using rule 59 (number -> FLOAT .)
    ;               reduce using rule 59 (number -> FLOAT .)
    ,               reduce using rule 59 (number -> FLOAT .)
    EQ              reduce using rule 59 (number -> FLOAT .)
    NEQ             reduce using rule 59 (number -> FLOAT .)
    LE              reduce using rule 59 (number -> FLOAT .)
    GE              reduce using rule 59 (number -> FLOAT .)
    <               reduce using rule 59 (number -> FLOAT .)
    >               reduce using rule 59 (number -> FLOAT .)
    +               reduce using rule 59 (number -> FLOAT .)
    -               reduce using rule 59 (number -> FLOAT .)
    *               reduce using rule 59 (number -> FLOAT .)
    /               reduce using rule 59 (number -> FLOAT .)
    DOTADD          reduce using rule 59 (number -> FLOAT .)
    DOTSUB          reduce using rule 59 (number -> FLOAT .)
    DOTMUL          reduce using rule 59 (number -> FLOAT .)
    DOTDIV          reduce using rule 59 (number -> FLOAT .)
    '               reduce using rule 59 (number -> FLOAT .)
    )               reduce using rule 59 (number -> FLOAT .)
    :               reduce using rule 59 (number -> FLOAT .)
    {               reduce using rule 59 (number -> FLOAT .)
    IF              reduce using rule 59 (number -> FLOAT .)
    FOR             reduce using rule 59 (number -> FLOAT .)
    WHILE           reduce using rule 59 (number -> FLOAT .)
    BREAK           reduce using rule 59 (number -> FLOAT .)
    CONTINUE        reduce using rule 59 (number -> FLOAT .)
    RETURN          reduce using rule 59 (number -> FLOAT .)
    PRINT           reduce using rule 59 (number -> FLOAT .)
    ID              reduce using rule 59 (number -> FLOAT .)
    INT             reduce using rule 59 (number -> FLOAT .)
    FLOAT           reduce using rule 59 (number -> FLOAT .)
    ]               reduce using rule 59 (number -> FLOAT .)


state 25

    (5) instructions -> instructions instruction .

    IF              reduce using rule 5 (instructions -> instructions instruction .)
    FOR             reduce using rule 5 (instructions -> instructions instruction .)
    WHILE           reduce using rule 5 (instructions -> instructions instruction .)
    BREAK           reduce using rule 5 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instructions instruction .)
    RETURN          reduce using rule 5 (instructions -> instructions instruction .)
    PRINT           reduce using rule 5 (instructions -> instructions instruction .)
    ID              reduce using rule 5 (instructions -> instructions instruction .)
    INT             reduce using rule 5 (instructions -> instructions instruction .)
    FLOAT           reduce using rule 5 (instructions -> instructions instruction .)
    $end            reduce using rule 5 (instructions -> instructions instruction .)
    }               reduce using rule 5 (instructions -> instructions instruction .)
    ELSE            reduce using rule 5 (instructions -> instructions instruction .)


state 26

    (7) instructions -> { instructions . }
    (5) instructions -> instructions . instruction
    (8) instruction -> . statement ;
    (9) instruction -> . IF ( condition ) instructions
    (10) instruction -> . IF ( condition ) instructions ELSE instructions
    (11) instruction -> . FOR ID = range instructions
    (12) instruction -> . WHILE ( condition ) instructions
    (20) statement -> . assignment
    (21) statement -> . print_statement
    (65) statement -> . BREAK
    (66) statement -> . CONTINUE
    (67) statement -> . RETURN variable
    (22) assignment -> . variable = expression
    (23) assignment -> . variable = matrix_function
    (24) assignment -> . variable = matrix
    (25) assignment -> . variable ADDASSIGN expression
    (26) assignment -> . variable SUBASSIGN expression
    (27) assignment -> . variable MULASSIGN expression
    (28) assignment -> . variable DIVASSIGN expression
    (60) print_statement -> . PRINT printables
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    }               shift and go to state 42
    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 11
    BREAK           shift and go to state 14
    CONTINUE        shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 18
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    instruction                    shift and go to state 25
    statement                      shift and go to state 7
    assignment                     shift and go to state 12
    print_statement                shift and go to state 13
    variable                       shift and go to state 17
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 27

    (8) instruction -> statement ; .

    IF              reduce using rule 8 (instruction -> statement ; .)
    FOR             reduce using rule 8 (instruction -> statement ; .)
    WHILE           reduce using rule 8 (instruction -> statement ; .)
    BREAK           reduce using rule 8 (instruction -> statement ; .)
    CONTINUE        reduce using rule 8 (instruction -> statement ; .)
    RETURN          reduce using rule 8 (instruction -> statement ; .)
    PRINT           reduce using rule 8 (instruction -> statement ; .)
    ID              reduce using rule 8 (instruction -> statement ; .)
    INT             reduce using rule 8 (instruction -> statement ; .)
    FLOAT           reduce using rule 8 (instruction -> statement ; .)
    $end            reduce using rule 8 (instruction -> statement ; .)
    }               reduce using rule 8 (instruction -> statement ; .)
    ELSE            reduce using rule 8 (instruction -> statement ; .)


state 28

    (9) instruction -> IF ( . condition ) instructions
    (10) instruction -> IF ( . condition ) instructions ELSE instructions
    (14) condition -> . expression EQ expression
    (15) condition -> . expression NEQ expression
    (16) condition -> . expression LE expression
    (17) condition -> . expression GE expression
    (18) condition -> . expression < expression
    (19) condition -> . expression > expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    condition                      shift and go to state 44
    expression                     shift and go to state 45
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 29

    (11) instruction -> FOR ID . = range instructions

    =               shift and go to state 48


state 30

    (44) vector_element -> ID [ . INT ]
    (45) matrix_element -> ID [ . INT , INT ]

    INT             shift and go to state 49


state 31

    (12) instruction -> WHILE ( . condition ) instructions
    (14) condition -> . expression EQ expression
    (15) condition -> . expression NEQ expression
    (16) condition -> . expression LE expression
    (17) condition -> . expression GE expression
    (18) condition -> . expression < expression
    (19) condition -> . expression > expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    condition                      shift and go to state 50
    expression                     shift and go to state 45
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 32

    (67) statement -> RETURN variable .

    ;               reduce using rule 67 (statement -> RETURN variable .)


state 33

    (22) assignment -> variable = . expression
    (23) assignment -> variable = . matrix_function
    (24) assignment -> variable = . matrix
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (29) matrix_function -> . matrix_function_name ( INT )
    (33) matrix -> . [ vectors ]
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (30) matrix_function_name -> . ZEROS
    (31) matrix_function_name -> . ONES
    (32) matrix_function_name -> . EYE
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    [               shift and go to state 55
    ID              shift and go to state 10
    ZEROS           shift and go to state 56
    ONES            shift and go to state 57
    EYE             shift and go to state 58
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    variable                       shift and go to state 47
    expression                     shift and go to state 51
    matrix_function                shift and go to state 52
    matrix                         shift and go to state 53
    matrix_function_name           shift and go to state 54
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 34

    (25) assignment -> variable ADDASSIGN . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    variable                       shift and go to state 47
    expression                     shift and go to state 59
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 35

    (26) assignment -> variable SUBASSIGN . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    variable                       shift and go to state 47
    expression                     shift and go to state 60
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 36

    (27) assignment -> variable MULASSIGN . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    variable                       shift and go to state 47
    expression                     shift and go to state 61
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 37

    (28) assignment -> variable DIVASSIGN . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    variable                       shift and go to state 47
    expression                     shift and go to state 62
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 38

    (60) print_statement -> PRINT printables .
    (61) printables -> printables . , printable

    ;               reduce using rule 60 (print_statement -> PRINT printables .)
    ,               shift and go to state 63


state 39

    (62) printables -> printable .

    ,               reduce using rule 62 (printables -> printable .)
    ;               reduce using rule 62 (printables -> printable .)


state 40

    (63) printable -> STRING .

    ,               reduce using rule 63 (printable -> STRING .)
    ;               reduce using rule 63 (printable -> STRING .)


state 41

    (64) printable -> variable .

    ,               reduce using rule 64 (printable -> variable .)
    ;               reduce using rule 64 (printable -> variable .)


state 42

    (7) instructions -> { instructions } .

    IF              reduce using rule 7 (instructions -> { instructions } .)
    FOR             reduce using rule 7 (instructions -> { instructions } .)
    WHILE           reduce using rule 7 (instructions -> { instructions } .)
    BREAK           reduce using rule 7 (instructions -> { instructions } .)
    CONTINUE        reduce using rule 7 (instructions -> { instructions } .)
    RETURN          reduce using rule 7 (instructions -> { instructions } .)
    PRINT           reduce using rule 7 (instructions -> { instructions } .)
    ID              reduce using rule 7 (instructions -> { instructions } .)
    INT             reduce using rule 7 (instructions -> { instructions } .)
    FLOAT           reduce using rule 7 (instructions -> { instructions } .)
    $end            reduce using rule 7 (instructions -> { instructions } .)
    }               reduce using rule 7 (instructions -> { instructions } .)
    ELSE            reduce using rule 7 (instructions -> { instructions } .)


state 43

    (56) expression -> ( . expression )
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 64
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 44

    (9) instruction -> IF ( condition . ) instructions
    (10) instruction -> IF ( condition . ) instructions ELSE instructions

    )               shift and go to state 65


state 45

    (14) condition -> expression . EQ expression
    (15) condition -> expression . NEQ expression
    (16) condition -> expression . LE expression
    (17) condition -> expression . GE expression
    (18) condition -> expression . < expression
    (19) condition -> expression . > expression
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    EQ              shift and go to state 66
    NEQ             shift and go to state 67
    LE              shift and go to state 68
    GE              shift and go to state 69
    <               shift and go to state 70
    >               shift and go to state 71
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 46

    (55) expression -> - . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 81
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 47

    (57) expression -> variable .

    EQ              reduce using rule 57 (expression -> variable .)
    NEQ             reduce using rule 57 (expression -> variable .)
    LE              reduce using rule 57 (expression -> variable .)
    GE              reduce using rule 57 (expression -> variable .)
    <               reduce using rule 57 (expression -> variable .)
    >               reduce using rule 57 (expression -> variable .)
    +               reduce using rule 57 (expression -> variable .)
    -               reduce using rule 57 (expression -> variable .)
    *               reduce using rule 57 (expression -> variable .)
    /               reduce using rule 57 (expression -> variable .)
    DOTADD          reduce using rule 57 (expression -> variable .)
    DOTSUB          reduce using rule 57 (expression -> variable .)
    DOTMUL          reduce using rule 57 (expression -> variable .)
    DOTDIV          reduce using rule 57 (expression -> variable .)
    '               reduce using rule 57 (expression -> variable .)
    ;               reduce using rule 57 (expression -> variable .)
    )               reduce using rule 57 (expression -> variable .)
    :               reduce using rule 57 (expression -> variable .)
    {               reduce using rule 57 (expression -> variable .)
    IF              reduce using rule 57 (expression -> variable .)
    FOR             reduce using rule 57 (expression -> variable .)
    WHILE           reduce using rule 57 (expression -> variable .)
    BREAK           reduce using rule 57 (expression -> variable .)
    CONTINUE        reduce using rule 57 (expression -> variable .)
    RETURN          reduce using rule 57 (expression -> variable .)
    PRINT           reduce using rule 57 (expression -> variable .)
    ID              reduce using rule 57 (expression -> variable .)
    INT             reduce using rule 57 (expression -> variable .)
    FLOAT           reduce using rule 57 (expression -> variable .)


state 48

    (11) instruction -> FOR ID = . range instructions
    (13) range -> . expression : expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    range                          shift and go to state 82
    expression                     shift and go to state 83
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 49

    (44) vector_element -> ID [ INT . ]
    (45) matrix_element -> ID [ INT . , INT ]

    ]               shift and go to state 84
    ,               shift and go to state 85


state 50

    (12) instruction -> WHILE ( condition . ) instructions

    )               shift and go to state 86


state 51

    (22) assignment -> variable = expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    ;               reduce using rule 22 (assignment -> variable = expression .)
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 52

    (23) assignment -> variable = matrix_function .

    ;               reduce using rule 23 (assignment -> variable = matrix_function .)


state 53

    (24) assignment -> variable = matrix .

    ;               reduce using rule 24 (assignment -> variable = matrix .)


state 54

    (29) matrix_function -> matrix_function_name . ( INT )

    (               shift and go to state 87


state 55

    (33) matrix -> [ . vectors ]
    (34) vectors -> . vectors , vector
    (35) vectors -> . vector
    (36) vector -> . [ variables ]

    [               shift and go to state 88

    vectors                        shift and go to state 89
    vector                         shift and go to state 90

state 56

    (30) matrix_function_name -> ZEROS .

    (               reduce using rule 30 (matrix_function_name -> ZEROS .)


state 57

    (31) matrix_function_name -> ONES .

    (               reduce using rule 31 (matrix_function_name -> ONES .)


state 58

    (32) matrix_function_name -> EYE .

    (               reduce using rule 32 (matrix_function_name -> EYE .)


state 59

    (25) assignment -> variable ADDASSIGN expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    ;               reduce using rule 25 (assignment -> variable ADDASSIGN expression .)
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 60

    (26) assignment -> variable SUBASSIGN expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    ;               reduce using rule 26 (assignment -> variable SUBASSIGN expression .)
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 61

    (27) assignment -> variable MULASSIGN expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    ;               reduce using rule 27 (assignment -> variable MULASSIGN expression .)
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 62

    (28) assignment -> variable DIVASSIGN expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    ;               reduce using rule 28 (assignment -> variable DIVASSIGN expression .)
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 63

    (61) printables -> printables , . printable
    (63) printable -> . STRING
    (64) printable -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    STRING          shift and go to state 40
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    printable                      shift and go to state 91
    variable                       shift and go to state 41
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 64

    (56) expression -> ( expression . )
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    )               shift and go to state 92
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 65

    (9) instruction -> IF ( condition ) . instructions
    (10) instruction -> IF ( condition ) . instructions ELSE instructions
    (5) instructions -> . instructions instruction
    (6) instructions -> . instruction
    (7) instructions -> . { instructions }
    (8) instruction -> . statement ;
    (9) instruction -> . IF ( condition ) instructions
    (10) instruction -> . IF ( condition ) instructions ELSE instructions
    (11) instruction -> . FOR ID = range instructions
    (12) instruction -> . WHILE ( condition ) instructions
    (20) statement -> . assignment
    (21) statement -> . print_statement
    (65) statement -> . BREAK
    (66) statement -> . CONTINUE
    (67) statement -> . RETURN variable
    (22) assignment -> . variable = expression
    (23) assignment -> . variable = matrix_function
    (24) assignment -> . variable = matrix
    (25) assignment -> . variable ADDASSIGN expression
    (26) assignment -> . variable SUBASSIGN expression
    (27) assignment -> . variable MULASSIGN expression
    (28) assignment -> . variable DIVASSIGN expression
    (60) print_statement -> . PRINT printables
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    {               shift and go to state 6
    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 11
    BREAK           shift and go to state 14
    CONTINUE        shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 18
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    instructions                   shift and go to state 93
    instruction                    shift and go to state 5
    statement                      shift and go to state 7
    assignment                     shift and go to state 12
    print_statement                shift and go to state 13
    variable                       shift and go to state 17
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 66

    (14) condition -> expression EQ . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 94
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 67

    (15) condition -> expression NEQ . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 95
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 68

    (16) condition -> expression LE . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 96
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 69

    (17) condition -> expression GE . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 97
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 70

    (18) condition -> expression < . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 98
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 71

    (19) condition -> expression > . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 99
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 72

    (46) expression -> expression + . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 100
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 73

    (47) expression -> expression - . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 101
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 74

    (48) expression -> expression * . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 102
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 75

    (49) expression -> expression / . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 103
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 76

    (50) expression -> expression DOTADD . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 104
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 77

    (51) expression -> expression DOTSUB . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 105
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 78

    (52) expression -> expression DOTMUL . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 106
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 79

    (53) expression -> expression DOTDIV . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 107
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 80

    (54) expression -> expression ' .

    EQ              reduce using rule 54 (expression -> expression ' .)
    NEQ             reduce using rule 54 (expression -> expression ' .)
    LE              reduce using rule 54 (expression -> expression ' .)
    GE              reduce using rule 54 (expression -> expression ' .)
    <               reduce using rule 54 (expression -> expression ' .)
    >               reduce using rule 54 (expression -> expression ' .)
    +               reduce using rule 54 (expression -> expression ' .)
    -               reduce using rule 54 (expression -> expression ' .)
    *               reduce using rule 54 (expression -> expression ' .)
    /               reduce using rule 54 (expression -> expression ' .)
    DOTADD          reduce using rule 54 (expression -> expression ' .)
    DOTSUB          reduce using rule 54 (expression -> expression ' .)
    DOTMUL          reduce using rule 54 (expression -> expression ' .)
    DOTDIV          reduce using rule 54 (expression -> expression ' .)
    '               reduce using rule 54 (expression -> expression ' .)
    ;               reduce using rule 54 (expression -> expression ' .)
    )               reduce using rule 54 (expression -> expression ' .)
    :               reduce using rule 54 (expression -> expression ' .)
    {               reduce using rule 54 (expression -> expression ' .)
    IF              reduce using rule 54 (expression -> expression ' .)
    FOR             reduce using rule 54 (expression -> expression ' .)
    WHILE           reduce using rule 54 (expression -> expression ' .)
    BREAK           reduce using rule 54 (expression -> expression ' .)
    CONTINUE        reduce using rule 54 (expression -> expression ' .)
    RETURN          reduce using rule 54 (expression -> expression ' .)
    PRINT           reduce using rule 54 (expression -> expression ' .)
    ID              reduce using rule 54 (expression -> expression ' .)
    INT             reduce using rule 54 (expression -> expression ' .)
    FLOAT           reduce using rule 54 (expression -> expression ' .)


state 81

    (55) expression -> - expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    EQ              reduce using rule 55 (expression -> - expression .)
    NEQ             reduce using rule 55 (expression -> - expression .)
    LE              reduce using rule 55 (expression -> - expression .)
    GE              reduce using rule 55 (expression -> - expression .)
    <               reduce using rule 55 (expression -> - expression .)
    >               reduce using rule 55 (expression -> - expression .)
    +               reduce using rule 55 (expression -> - expression .)
    -               reduce using rule 55 (expression -> - expression .)
    DOTADD          reduce using rule 55 (expression -> - expression .)
    DOTSUB          reduce using rule 55 (expression -> - expression .)
    '               reduce using rule 55 (expression -> - expression .)
    ;               reduce using rule 55 (expression -> - expression .)
    )               reduce using rule 55 (expression -> - expression .)
    :               reduce using rule 55 (expression -> - expression .)
    {               reduce using rule 55 (expression -> - expression .)
    IF              reduce using rule 55 (expression -> - expression .)
    FOR             reduce using rule 55 (expression -> - expression .)
    WHILE           reduce using rule 55 (expression -> - expression .)
    BREAK           reduce using rule 55 (expression -> - expression .)
    CONTINUE        reduce using rule 55 (expression -> - expression .)
    RETURN          reduce using rule 55 (expression -> - expression .)
    PRINT           reduce using rule 55 (expression -> - expression .)
    ID              reduce using rule 55 (expression -> - expression .)
    INT             reduce using rule 55 (expression -> - expression .)
    FLOAT           reduce using rule 55 (expression -> - expression .)
    *               shift and go to state 74
    /               shift and go to state 75
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79

  ! *               [ reduce using rule 55 (expression -> - expression .) ]
  ! /               [ reduce using rule 55 (expression -> - expression .) ]
  ! DOTMUL          [ reduce using rule 55 (expression -> - expression .) ]
  ! DOTDIV          [ reduce using rule 55 (expression -> - expression .) ]
  ! +               [ shift and go to state 72 ]
  ! -               [ shift and go to state 73 ]
  ! DOTADD          [ shift and go to state 76 ]
  ! DOTSUB          [ shift and go to state 77 ]
  ! '               [ shift and go to state 80 ]


state 82

    (11) instruction -> FOR ID = range . instructions
    (5) instructions -> . instructions instruction
    (6) instructions -> . instruction
    (7) instructions -> . { instructions }
    (8) instruction -> . statement ;
    (9) instruction -> . IF ( condition ) instructions
    (10) instruction -> . IF ( condition ) instructions ELSE instructions
    (11) instruction -> . FOR ID = range instructions
    (12) instruction -> . WHILE ( condition ) instructions
    (20) statement -> . assignment
    (21) statement -> . print_statement
    (65) statement -> . BREAK
    (66) statement -> . CONTINUE
    (67) statement -> . RETURN variable
    (22) assignment -> . variable = expression
    (23) assignment -> . variable = matrix_function
    (24) assignment -> . variable = matrix
    (25) assignment -> . variable ADDASSIGN expression
    (26) assignment -> . variable SUBASSIGN expression
    (27) assignment -> . variable MULASSIGN expression
    (28) assignment -> . variable DIVASSIGN expression
    (60) print_statement -> . PRINT printables
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    {               shift and go to state 6
    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 11
    BREAK           shift and go to state 14
    CONTINUE        shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 18
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    instructions                   shift and go to state 108
    instruction                    shift and go to state 5
    statement                      shift and go to state 7
    assignment                     shift and go to state 12
    print_statement                shift and go to state 13
    variable                       shift and go to state 17
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 83

    (13) range -> expression . : expression
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    :               shift and go to state 109
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 84

    (44) vector_element -> ID [ INT ] .

    =               reduce using rule 44 (vector_element -> ID [ INT ] .)
    ADDASSIGN       reduce using rule 44 (vector_element -> ID [ INT ] .)
    SUBASSIGN       reduce using rule 44 (vector_element -> ID [ INT ] .)
    MULASSIGN       reduce using rule 44 (vector_element -> ID [ INT ] .)
    DIVASSIGN       reduce using rule 44 (vector_element -> ID [ INT ] .)
    ;               reduce using rule 44 (vector_element -> ID [ INT ] .)
    ,               reduce using rule 44 (vector_element -> ID [ INT ] .)
    EQ              reduce using rule 44 (vector_element -> ID [ INT ] .)
    NEQ             reduce using rule 44 (vector_element -> ID [ INT ] .)
    LE              reduce using rule 44 (vector_element -> ID [ INT ] .)
    GE              reduce using rule 44 (vector_element -> ID [ INT ] .)
    <               reduce using rule 44 (vector_element -> ID [ INT ] .)
    >               reduce using rule 44 (vector_element -> ID [ INT ] .)
    +               reduce using rule 44 (vector_element -> ID [ INT ] .)
    -               reduce using rule 44 (vector_element -> ID [ INT ] .)
    *               reduce using rule 44 (vector_element -> ID [ INT ] .)
    /               reduce using rule 44 (vector_element -> ID [ INT ] .)
    DOTADD          reduce using rule 44 (vector_element -> ID [ INT ] .)
    DOTSUB          reduce using rule 44 (vector_element -> ID [ INT ] .)
    DOTMUL          reduce using rule 44 (vector_element -> ID [ INT ] .)
    DOTDIV          reduce using rule 44 (vector_element -> ID [ INT ] .)
    '               reduce using rule 44 (vector_element -> ID [ INT ] .)
    )               reduce using rule 44 (vector_element -> ID [ INT ] .)
    :               reduce using rule 44 (vector_element -> ID [ INT ] .)
    {               reduce using rule 44 (vector_element -> ID [ INT ] .)
    IF              reduce using rule 44 (vector_element -> ID [ INT ] .)
    FOR             reduce using rule 44 (vector_element -> ID [ INT ] .)
    WHILE           reduce using rule 44 (vector_element -> ID [ INT ] .)
    BREAK           reduce using rule 44 (vector_element -> ID [ INT ] .)
    CONTINUE        reduce using rule 44 (vector_element -> ID [ INT ] .)
    RETURN          reduce using rule 44 (vector_element -> ID [ INT ] .)
    PRINT           reduce using rule 44 (vector_element -> ID [ INT ] .)
    ID              reduce using rule 44 (vector_element -> ID [ INT ] .)
    INT             reduce using rule 44 (vector_element -> ID [ INT ] .)
    FLOAT           reduce using rule 44 (vector_element -> ID [ INT ] .)
    ]               reduce using rule 44 (vector_element -> ID [ INT ] .)


state 85

    (45) matrix_element -> ID [ INT , . INT ]

    INT             shift and go to state 110


state 86

    (12) instruction -> WHILE ( condition ) . instructions
    (5) instructions -> . instructions instruction
    (6) instructions -> . instruction
    (7) instructions -> . { instructions }
    (8) instruction -> . statement ;
    (9) instruction -> . IF ( condition ) instructions
    (10) instruction -> . IF ( condition ) instructions ELSE instructions
    (11) instruction -> . FOR ID = range instructions
    (12) instruction -> . WHILE ( condition ) instructions
    (20) statement -> . assignment
    (21) statement -> . print_statement
    (65) statement -> . BREAK
    (66) statement -> . CONTINUE
    (67) statement -> . RETURN variable
    (22) assignment -> . variable = expression
    (23) assignment -> . variable = matrix_function
    (24) assignment -> . variable = matrix
    (25) assignment -> . variable ADDASSIGN expression
    (26) assignment -> . variable SUBASSIGN expression
    (27) assignment -> . variable MULASSIGN expression
    (28) assignment -> . variable DIVASSIGN expression
    (60) print_statement -> . PRINT printables
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    {               shift and go to state 6
    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 11
    BREAK           shift and go to state 14
    CONTINUE        shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 18
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    instructions                   shift and go to state 111
    instruction                    shift and go to state 5
    statement                      shift and go to state 7
    assignment                     shift and go to state 12
    print_statement                shift and go to state 13
    variable                       shift and go to state 17
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 87

    (29) matrix_function -> matrix_function_name ( . INT )

    INT             shift and go to state 112


state 88

    (36) vector -> [ . variables ]
    (37) variables -> . variables , variable
    (38) variables -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    variables                      shift and go to state 113
    variable                       shift and go to state 114
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 89

    (33) matrix -> [ vectors . ]
    (34) vectors -> vectors . , vector

    ]               shift and go to state 115
    ,               shift and go to state 116


state 90

    (35) vectors -> vector .

    ]               reduce using rule 35 (vectors -> vector .)
    ,               reduce using rule 35 (vectors -> vector .)


state 91

    (61) printables -> printables , printable .

    ,               reduce using rule 61 (printables -> printables , printable .)
    ;               reduce using rule 61 (printables -> printables , printable .)


state 92

    (56) expression -> ( expression ) .

    EQ              reduce using rule 56 (expression -> ( expression ) .)
    NEQ             reduce using rule 56 (expression -> ( expression ) .)
    LE              reduce using rule 56 (expression -> ( expression ) .)
    GE              reduce using rule 56 (expression -> ( expression ) .)
    <               reduce using rule 56 (expression -> ( expression ) .)
    >               reduce using rule 56 (expression -> ( expression ) .)
    +               reduce using rule 56 (expression -> ( expression ) .)
    -               reduce using rule 56 (expression -> ( expression ) .)
    *               reduce using rule 56 (expression -> ( expression ) .)
    /               reduce using rule 56 (expression -> ( expression ) .)
    DOTADD          reduce using rule 56 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 56 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 56 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 56 (expression -> ( expression ) .)
    '               reduce using rule 56 (expression -> ( expression ) .)
    ;               reduce using rule 56 (expression -> ( expression ) .)
    )               reduce using rule 56 (expression -> ( expression ) .)
    :               reduce using rule 56 (expression -> ( expression ) .)
    {               reduce using rule 56 (expression -> ( expression ) .)
    IF              reduce using rule 56 (expression -> ( expression ) .)
    FOR             reduce using rule 56 (expression -> ( expression ) .)
    WHILE           reduce using rule 56 (expression -> ( expression ) .)
    BREAK           reduce using rule 56 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 56 (expression -> ( expression ) .)
    RETURN          reduce using rule 56 (expression -> ( expression ) .)
    PRINT           reduce using rule 56 (expression -> ( expression ) .)
    ID              reduce using rule 56 (expression -> ( expression ) .)
    INT             reduce using rule 56 (expression -> ( expression ) .)
    FLOAT           reduce using rule 56 (expression -> ( expression ) .)


state 93

    (9) instruction -> IF ( condition ) instructions .
    (10) instruction -> IF ( condition ) instructions . ELSE instructions
    (5) instructions -> instructions . instruction
    (8) instruction -> . statement ;
    (9) instruction -> . IF ( condition ) instructions
    (10) instruction -> . IF ( condition ) instructions ELSE instructions
    (11) instruction -> . FOR ID = range instructions
    (12) instruction -> . WHILE ( condition ) instructions
    (20) statement -> . assignment
    (21) statement -> . print_statement
    (65) statement -> . BREAK
    (66) statement -> . CONTINUE
    (67) statement -> . RETURN variable
    (22) assignment -> . variable = expression
    (23) assignment -> . variable = matrix_function
    (24) assignment -> . variable = matrix
    (25) assignment -> . variable ADDASSIGN expression
    (26) assignment -> . variable SUBASSIGN expression
    (27) assignment -> . variable MULASSIGN expression
    (28) assignment -> . variable DIVASSIGN expression
    (60) print_statement -> . PRINT printables
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    IF              reduce using rule 9 (instruction -> IF ( condition ) instructions .)
    FOR             reduce using rule 9 (instruction -> IF ( condition ) instructions .)
    WHILE           reduce using rule 9 (instruction -> IF ( condition ) instructions .)
    BREAK           reduce using rule 9 (instruction -> IF ( condition ) instructions .)
    CONTINUE        reduce using rule 9 (instruction -> IF ( condition ) instructions .)
    RETURN          reduce using rule 9 (instruction -> IF ( condition ) instructions .)
    PRINT           reduce using rule 9 (instruction -> IF ( condition ) instructions .)
    ID              reduce using rule 9 (instruction -> IF ( condition ) instructions .)
    $end            reduce using rule 9 (instruction -> IF ( condition ) instructions .)
    }               reduce using rule 9 (instruction -> IF ( condition ) instructions .)
    ELSE            shift and go to state 117
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

  ! INT             [ reduce using rule 9 (instruction -> IF ( condition ) instructions .) ]
  ! FLOAT           [ reduce using rule 9 (instruction -> IF ( condition ) instructions .) ]
  ! ELSE            [ reduce using rule 9 (instruction -> IF ( condition ) instructions .) ]
  ! IF              [ shift and go to state 8 ]
  ! FOR             [ shift and go to state 9 ]
  ! WHILE           [ shift and go to state 11 ]
  ! BREAK           [ shift and go to state 14 ]
  ! CONTINUE        [ shift and go to state 15 ]
  ! RETURN          [ shift and go to state 16 ]
  ! PRINT           [ shift and go to state 18 ]
  ! ID              [ shift and go to state 10 ]

    instruction                    shift and go to state 25
    statement                      shift and go to state 7
    assignment                     shift and go to state 12
    print_statement                shift and go to state 13
    variable                       shift and go to state 17
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 94

    (14) condition -> expression EQ expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    )               reduce using rule 14 (condition -> expression EQ expression .)
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 95

    (15) condition -> expression NEQ expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    )               reduce using rule 15 (condition -> expression NEQ expression .)
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 96

    (16) condition -> expression LE expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    )               reduce using rule 16 (condition -> expression LE expression .)
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 97

    (17) condition -> expression GE expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    )               reduce using rule 17 (condition -> expression GE expression .)
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 98

    (18) condition -> expression < expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    )               reduce using rule 18 (condition -> expression < expression .)
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 99

    (19) condition -> expression > expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    )               reduce using rule 19 (condition -> expression > expression .)
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 100

    (46) expression -> expression + expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    EQ              reduce using rule 46 (expression -> expression + expression .)
    NEQ             reduce using rule 46 (expression -> expression + expression .)
    LE              reduce using rule 46 (expression -> expression + expression .)
    GE              reduce using rule 46 (expression -> expression + expression .)
    <               reduce using rule 46 (expression -> expression + expression .)
    >               reduce using rule 46 (expression -> expression + expression .)
    +               reduce using rule 46 (expression -> expression + expression .)
    -               reduce using rule 46 (expression -> expression + expression .)
    DOTADD          reduce using rule 46 (expression -> expression + expression .)
    DOTSUB          reduce using rule 46 (expression -> expression + expression .)
    '               reduce using rule 46 (expression -> expression + expression .)
    ;               reduce using rule 46 (expression -> expression + expression .)
    )               reduce using rule 46 (expression -> expression + expression .)
    :               reduce using rule 46 (expression -> expression + expression .)
    {               reduce using rule 46 (expression -> expression + expression .)
    IF              reduce using rule 46 (expression -> expression + expression .)
    FOR             reduce using rule 46 (expression -> expression + expression .)
    WHILE           reduce using rule 46 (expression -> expression + expression .)
    BREAK           reduce using rule 46 (expression -> expression + expression .)
    CONTINUE        reduce using rule 46 (expression -> expression + expression .)
    RETURN          reduce using rule 46 (expression -> expression + expression .)
    PRINT           reduce using rule 46 (expression -> expression + expression .)
    ID              reduce using rule 46 (expression -> expression + expression .)
    INT             reduce using rule 46 (expression -> expression + expression .)
    FLOAT           reduce using rule 46 (expression -> expression + expression .)
    *               shift and go to state 74
    /               shift and go to state 75
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79

  ! *               [ reduce using rule 46 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 46 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 46 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 46 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 72 ]
  ! -               [ shift and go to state 73 ]
  ! DOTADD          [ shift and go to state 76 ]
  ! DOTSUB          [ shift and go to state 77 ]
  ! '               [ shift and go to state 80 ]


state 101

    (47) expression -> expression - expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    EQ              reduce using rule 47 (expression -> expression - expression .)
    NEQ             reduce using rule 47 (expression -> expression - expression .)
    LE              reduce using rule 47 (expression -> expression - expression .)
    GE              reduce using rule 47 (expression -> expression - expression .)
    <               reduce using rule 47 (expression -> expression - expression .)
    >               reduce using rule 47 (expression -> expression - expression .)
    +               reduce using rule 47 (expression -> expression - expression .)
    -               reduce using rule 47 (expression -> expression - expression .)
    DOTADD          reduce using rule 47 (expression -> expression - expression .)
    DOTSUB          reduce using rule 47 (expression -> expression - expression .)
    '               reduce using rule 47 (expression -> expression - expression .)
    ;               reduce using rule 47 (expression -> expression - expression .)
    )               reduce using rule 47 (expression -> expression - expression .)
    :               reduce using rule 47 (expression -> expression - expression .)
    {               reduce using rule 47 (expression -> expression - expression .)
    IF              reduce using rule 47 (expression -> expression - expression .)
    FOR             reduce using rule 47 (expression -> expression - expression .)
    WHILE           reduce using rule 47 (expression -> expression - expression .)
    BREAK           reduce using rule 47 (expression -> expression - expression .)
    CONTINUE        reduce using rule 47 (expression -> expression - expression .)
    RETURN          reduce using rule 47 (expression -> expression - expression .)
    PRINT           reduce using rule 47 (expression -> expression - expression .)
    ID              reduce using rule 47 (expression -> expression - expression .)
    INT             reduce using rule 47 (expression -> expression - expression .)
    FLOAT           reduce using rule 47 (expression -> expression - expression .)
    *               shift and go to state 74
    /               shift and go to state 75
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79

  ! *               [ reduce using rule 47 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 47 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 47 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 47 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 72 ]
  ! -               [ shift and go to state 73 ]
  ! DOTADD          [ shift and go to state 76 ]
  ! DOTSUB          [ shift and go to state 77 ]
  ! '               [ shift and go to state 80 ]


state 102

    (48) expression -> expression * expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    EQ              reduce using rule 48 (expression -> expression * expression .)
    NEQ             reduce using rule 48 (expression -> expression * expression .)
    LE              reduce using rule 48 (expression -> expression * expression .)
    GE              reduce using rule 48 (expression -> expression * expression .)
    <               reduce using rule 48 (expression -> expression * expression .)
    >               reduce using rule 48 (expression -> expression * expression .)
    +               reduce using rule 48 (expression -> expression * expression .)
    -               reduce using rule 48 (expression -> expression * expression .)
    *               reduce using rule 48 (expression -> expression * expression .)
    /               reduce using rule 48 (expression -> expression * expression .)
    DOTADD          reduce using rule 48 (expression -> expression * expression .)
    DOTSUB          reduce using rule 48 (expression -> expression * expression .)
    DOTMUL          reduce using rule 48 (expression -> expression * expression .)
    DOTDIV          reduce using rule 48 (expression -> expression * expression .)
    '               reduce using rule 48 (expression -> expression * expression .)
    ;               reduce using rule 48 (expression -> expression * expression .)
    )               reduce using rule 48 (expression -> expression * expression .)
    :               reduce using rule 48 (expression -> expression * expression .)
    {               reduce using rule 48 (expression -> expression * expression .)
    IF              reduce using rule 48 (expression -> expression * expression .)
    FOR             reduce using rule 48 (expression -> expression * expression .)
    WHILE           reduce using rule 48 (expression -> expression * expression .)
    BREAK           reduce using rule 48 (expression -> expression * expression .)
    CONTINUE        reduce using rule 48 (expression -> expression * expression .)
    RETURN          reduce using rule 48 (expression -> expression * expression .)
    PRINT           reduce using rule 48 (expression -> expression * expression .)
    ID              reduce using rule 48 (expression -> expression * expression .)
    INT             reduce using rule 48 (expression -> expression * expression .)
    FLOAT           reduce using rule 48 (expression -> expression * expression .)

  ! +               [ shift and go to state 72 ]
  ! -               [ shift and go to state 73 ]
  ! *               [ shift and go to state 74 ]
  ! /               [ shift and go to state 75 ]
  ! DOTADD          [ shift and go to state 76 ]
  ! DOTSUB          [ shift and go to state 77 ]
  ! DOTMUL          [ shift and go to state 78 ]
  ! DOTDIV          [ shift and go to state 79 ]
  ! '               [ shift and go to state 80 ]


state 103

    (49) expression -> expression / expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    EQ              reduce using rule 49 (expression -> expression / expression .)
    NEQ             reduce using rule 49 (expression -> expression / expression .)
    LE              reduce using rule 49 (expression -> expression / expression .)
    GE              reduce using rule 49 (expression -> expression / expression .)
    <               reduce using rule 49 (expression -> expression / expression .)
    >               reduce using rule 49 (expression -> expression / expression .)
    +               reduce using rule 49 (expression -> expression / expression .)
    -               reduce using rule 49 (expression -> expression / expression .)
    *               reduce using rule 49 (expression -> expression / expression .)
    /               reduce using rule 49 (expression -> expression / expression .)
    DOTADD          reduce using rule 49 (expression -> expression / expression .)
    DOTSUB          reduce using rule 49 (expression -> expression / expression .)
    DOTMUL          reduce using rule 49 (expression -> expression / expression .)
    DOTDIV          reduce using rule 49 (expression -> expression / expression .)
    '               reduce using rule 49 (expression -> expression / expression .)
    ;               reduce using rule 49 (expression -> expression / expression .)
    )               reduce using rule 49 (expression -> expression / expression .)
    :               reduce using rule 49 (expression -> expression / expression .)
    {               reduce using rule 49 (expression -> expression / expression .)
    IF              reduce using rule 49 (expression -> expression / expression .)
    FOR             reduce using rule 49 (expression -> expression / expression .)
    WHILE           reduce using rule 49 (expression -> expression / expression .)
    BREAK           reduce using rule 49 (expression -> expression / expression .)
    CONTINUE        reduce using rule 49 (expression -> expression / expression .)
    RETURN          reduce using rule 49 (expression -> expression / expression .)
    PRINT           reduce using rule 49 (expression -> expression / expression .)
    ID              reduce using rule 49 (expression -> expression / expression .)
    INT             reduce using rule 49 (expression -> expression / expression .)
    FLOAT           reduce using rule 49 (expression -> expression / expression .)

  ! +               [ shift and go to state 72 ]
  ! -               [ shift and go to state 73 ]
  ! *               [ shift and go to state 74 ]
  ! /               [ shift and go to state 75 ]
  ! DOTADD          [ shift and go to state 76 ]
  ! DOTSUB          [ shift and go to state 77 ]
  ! DOTMUL          [ shift and go to state 78 ]
  ! DOTDIV          [ shift and go to state 79 ]
  ! '               [ shift and go to state 80 ]


state 104

    (50) expression -> expression DOTADD expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    EQ              reduce using rule 50 (expression -> expression DOTADD expression .)
    NEQ             reduce using rule 50 (expression -> expression DOTADD expression .)
    LE              reduce using rule 50 (expression -> expression DOTADD expression .)
    GE              reduce using rule 50 (expression -> expression DOTADD expression .)
    <               reduce using rule 50 (expression -> expression DOTADD expression .)
    >               reduce using rule 50 (expression -> expression DOTADD expression .)
    +               reduce using rule 50 (expression -> expression DOTADD expression .)
    -               reduce using rule 50 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 50 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 50 (expression -> expression DOTADD expression .)
    '               reduce using rule 50 (expression -> expression DOTADD expression .)
    ;               reduce using rule 50 (expression -> expression DOTADD expression .)
    )               reduce using rule 50 (expression -> expression DOTADD expression .)
    :               reduce using rule 50 (expression -> expression DOTADD expression .)
    {               reduce using rule 50 (expression -> expression DOTADD expression .)
    IF              reduce using rule 50 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 50 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 50 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 50 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 50 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 50 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 50 (expression -> expression DOTADD expression .)
    ID              reduce using rule 50 (expression -> expression DOTADD expression .)
    INT             reduce using rule 50 (expression -> expression DOTADD expression .)
    FLOAT           reduce using rule 50 (expression -> expression DOTADD expression .)
    *               shift and go to state 74
    /               shift and go to state 75
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79

  ! *               [ reduce using rule 50 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 50 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 50 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 50 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 72 ]
  ! -               [ shift and go to state 73 ]
  ! DOTADD          [ shift and go to state 76 ]
  ! DOTSUB          [ shift and go to state 77 ]
  ! '               [ shift and go to state 80 ]


state 105

    (51) expression -> expression DOTSUB expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    EQ              reduce using rule 51 (expression -> expression DOTSUB expression .)
    NEQ             reduce using rule 51 (expression -> expression DOTSUB expression .)
    LE              reduce using rule 51 (expression -> expression DOTSUB expression .)
    GE              reduce using rule 51 (expression -> expression DOTSUB expression .)
    <               reduce using rule 51 (expression -> expression DOTSUB expression .)
    >               reduce using rule 51 (expression -> expression DOTSUB expression .)
    +               reduce using rule 51 (expression -> expression DOTSUB expression .)
    -               reduce using rule 51 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 51 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 51 (expression -> expression DOTSUB expression .)
    '               reduce using rule 51 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 51 (expression -> expression DOTSUB expression .)
    )               reduce using rule 51 (expression -> expression DOTSUB expression .)
    :               reduce using rule 51 (expression -> expression DOTSUB expression .)
    {               reduce using rule 51 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 51 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 51 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 51 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 51 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 51 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 51 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 51 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 51 (expression -> expression DOTSUB expression .)
    INT             reduce using rule 51 (expression -> expression DOTSUB expression .)
    FLOAT           reduce using rule 51 (expression -> expression DOTSUB expression .)
    *               shift and go to state 74
    /               shift and go to state 75
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79

  ! *               [ reduce using rule 51 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 51 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 51 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 51 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 72 ]
  ! -               [ shift and go to state 73 ]
  ! DOTADD          [ shift and go to state 76 ]
  ! DOTSUB          [ shift and go to state 77 ]
  ! '               [ shift and go to state 80 ]


state 106

    (52) expression -> expression DOTMUL expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    EQ              reduce using rule 52 (expression -> expression DOTMUL expression .)
    NEQ             reduce using rule 52 (expression -> expression DOTMUL expression .)
    LE              reduce using rule 52 (expression -> expression DOTMUL expression .)
    GE              reduce using rule 52 (expression -> expression DOTMUL expression .)
    <               reduce using rule 52 (expression -> expression DOTMUL expression .)
    >               reduce using rule 52 (expression -> expression DOTMUL expression .)
    +               reduce using rule 52 (expression -> expression DOTMUL expression .)
    -               reduce using rule 52 (expression -> expression DOTMUL expression .)
    *               reduce using rule 52 (expression -> expression DOTMUL expression .)
    /               reduce using rule 52 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 52 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 52 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 52 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 52 (expression -> expression DOTMUL expression .)
    '               reduce using rule 52 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 52 (expression -> expression DOTMUL expression .)
    )               reduce using rule 52 (expression -> expression DOTMUL expression .)
    :               reduce using rule 52 (expression -> expression DOTMUL expression .)
    {               reduce using rule 52 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 52 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 52 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 52 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 52 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 52 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 52 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 52 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 52 (expression -> expression DOTMUL expression .)
    INT             reduce using rule 52 (expression -> expression DOTMUL expression .)
    FLOAT           reduce using rule 52 (expression -> expression DOTMUL expression .)

  ! +               [ shift and go to state 72 ]
  ! -               [ shift and go to state 73 ]
  ! *               [ shift and go to state 74 ]
  ! /               [ shift and go to state 75 ]
  ! DOTADD          [ shift and go to state 76 ]
  ! DOTSUB          [ shift and go to state 77 ]
  ! DOTMUL          [ shift and go to state 78 ]
  ! DOTDIV          [ shift and go to state 79 ]
  ! '               [ shift and go to state 80 ]


state 107

    (53) expression -> expression DOTDIV expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    EQ              reduce using rule 53 (expression -> expression DOTDIV expression .)
    NEQ             reduce using rule 53 (expression -> expression DOTDIV expression .)
    LE              reduce using rule 53 (expression -> expression DOTDIV expression .)
    GE              reduce using rule 53 (expression -> expression DOTDIV expression .)
    <               reduce using rule 53 (expression -> expression DOTDIV expression .)
    >               reduce using rule 53 (expression -> expression DOTDIV expression .)
    +               reduce using rule 53 (expression -> expression DOTDIV expression .)
    -               reduce using rule 53 (expression -> expression DOTDIV expression .)
    *               reduce using rule 53 (expression -> expression DOTDIV expression .)
    /               reduce using rule 53 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 53 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 53 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 53 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 53 (expression -> expression DOTDIV expression .)
    '               reduce using rule 53 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 53 (expression -> expression DOTDIV expression .)
    )               reduce using rule 53 (expression -> expression DOTDIV expression .)
    :               reduce using rule 53 (expression -> expression DOTDIV expression .)
    {               reduce using rule 53 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 53 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 53 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 53 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 53 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 53 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 53 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 53 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 53 (expression -> expression DOTDIV expression .)
    INT             reduce using rule 53 (expression -> expression DOTDIV expression .)
    FLOAT           reduce using rule 53 (expression -> expression DOTDIV expression .)

  ! +               [ shift and go to state 72 ]
  ! -               [ shift and go to state 73 ]
  ! *               [ shift and go to state 74 ]
  ! /               [ shift and go to state 75 ]
  ! DOTADD          [ shift and go to state 76 ]
  ! DOTSUB          [ shift and go to state 77 ]
  ! DOTMUL          [ shift and go to state 78 ]
  ! DOTDIV          [ shift and go to state 79 ]
  ! '               [ shift and go to state 80 ]


state 108

    (11) instruction -> FOR ID = range instructions .
    (5) instructions -> instructions . instruction
    (8) instruction -> . statement ;
    (9) instruction -> . IF ( condition ) instructions
    (10) instruction -> . IF ( condition ) instructions ELSE instructions
    (11) instruction -> . FOR ID = range instructions
    (12) instruction -> . WHILE ( condition ) instructions
    (20) statement -> . assignment
    (21) statement -> . print_statement
    (65) statement -> . BREAK
    (66) statement -> . CONTINUE
    (67) statement -> . RETURN variable
    (22) assignment -> . variable = expression
    (23) assignment -> . variable = matrix_function
    (24) assignment -> . variable = matrix
    (25) assignment -> . variable ADDASSIGN expression
    (26) assignment -> . variable SUBASSIGN expression
    (27) assignment -> . variable MULASSIGN expression
    (28) assignment -> . variable DIVASSIGN expression
    (60) print_statement -> . PRINT printables
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    IF              reduce using rule 11 (instruction -> FOR ID = range instructions .)
    FOR             reduce using rule 11 (instruction -> FOR ID = range instructions .)
    WHILE           reduce using rule 11 (instruction -> FOR ID = range instructions .)
    BREAK           reduce using rule 11 (instruction -> FOR ID = range instructions .)
    CONTINUE        reduce using rule 11 (instruction -> FOR ID = range instructions .)
    RETURN          reduce using rule 11 (instruction -> FOR ID = range instructions .)
    PRINT           reduce using rule 11 (instruction -> FOR ID = range instructions .)
    ID              reduce using rule 11 (instruction -> FOR ID = range instructions .)
    $end            reduce using rule 11 (instruction -> FOR ID = range instructions .)
    }               reduce using rule 11 (instruction -> FOR ID = range instructions .)
    ELSE            reduce using rule 11 (instruction -> FOR ID = range instructions .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

  ! INT             [ reduce using rule 11 (instruction -> FOR ID = range instructions .) ]
  ! FLOAT           [ reduce using rule 11 (instruction -> FOR ID = range instructions .) ]
  ! IF              [ shift and go to state 8 ]
  ! FOR             [ shift and go to state 9 ]
  ! WHILE           [ shift and go to state 11 ]
  ! BREAK           [ shift and go to state 14 ]
  ! CONTINUE        [ shift and go to state 15 ]
  ! RETURN          [ shift and go to state 16 ]
  ! PRINT           [ shift and go to state 18 ]
  ! ID              [ shift and go to state 10 ]

    instruction                    shift and go to state 25
    statement                      shift and go to state 7
    assignment                     shift and go to state 12
    print_statement                shift and go to state 13
    variable                       shift and go to state 17
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 109

    (13) range -> expression : . expression
    (46) expression -> . expression + expression
    (47) expression -> . expression - expression
    (48) expression -> . expression * expression
    (49) expression -> . expression / expression
    (50) expression -> . expression DOTADD expression
    (51) expression -> . expression DOTSUB expression
    (52) expression -> . expression DOTMUL expression
    (53) expression -> . expression DOTDIV expression
    (54) expression -> . expression '
    (55) expression -> . - expression
    (56) expression -> . ( expression )
    (57) expression -> . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    -               shift and go to state 46
    (               shift and go to state 43
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    expression                     shift and go to state 118
    variable                       shift and go to state 47
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 110

    (45) matrix_element -> ID [ INT , INT . ]

    ]               shift and go to state 119


state 111

    (12) instruction -> WHILE ( condition ) instructions .
    (5) instructions -> instructions . instruction
    (8) instruction -> . statement ;
    (9) instruction -> . IF ( condition ) instructions
    (10) instruction -> . IF ( condition ) instructions ELSE instructions
    (11) instruction -> . FOR ID = range instructions
    (12) instruction -> . WHILE ( condition ) instructions
    (20) statement -> . assignment
    (21) statement -> . print_statement
    (65) statement -> . BREAK
    (66) statement -> . CONTINUE
    (67) statement -> . RETURN variable
    (22) assignment -> . variable = expression
    (23) assignment -> . variable = matrix_function
    (24) assignment -> . variable = matrix
    (25) assignment -> . variable ADDASSIGN expression
    (26) assignment -> . variable SUBASSIGN expression
    (27) assignment -> . variable MULASSIGN expression
    (28) assignment -> . variable DIVASSIGN expression
    (60) print_statement -> . PRINT printables
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    $end            reduce using rule 12 (instruction -> WHILE ( condition ) instructions .)
    }               reduce using rule 12 (instruction -> WHILE ( condition ) instructions .)
    ELSE            reduce using rule 12 (instruction -> WHILE ( condition ) instructions .)
    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 11
    BREAK           shift and go to state 14
    CONTINUE        shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 18
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

  ! IF              [ reduce using rule 12 (instruction -> WHILE ( condition ) instructions .) ]
  ! FOR             [ reduce using rule 12 (instruction -> WHILE ( condition ) instructions .) ]
  ! WHILE           [ reduce using rule 12 (instruction -> WHILE ( condition ) instructions .) ]
  ! BREAK           [ reduce using rule 12 (instruction -> WHILE ( condition ) instructions .) ]
  ! CONTINUE        [ reduce using rule 12 (instruction -> WHILE ( condition ) instructions .) ]
  ! RETURN          [ reduce using rule 12 (instruction -> WHILE ( condition ) instructions .) ]
  ! PRINT           [ reduce using rule 12 (instruction -> WHILE ( condition ) instructions .) ]
  ! ID              [ reduce using rule 12 (instruction -> WHILE ( condition ) instructions .) ]
  ! INT             [ reduce using rule 12 (instruction -> WHILE ( condition ) instructions .) ]
  ! FLOAT           [ reduce using rule 12 (instruction -> WHILE ( condition ) instructions .) ]

    instruction                    shift and go to state 25
    statement                      shift and go to state 7
    assignment                     shift and go to state 12
    print_statement                shift and go to state 13
    variable                       shift and go to state 17
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 112

    (29) matrix_function -> matrix_function_name ( INT . )

    )               shift and go to state 120


state 113

    (36) vector -> [ variables . ]
    (37) variables -> variables . , variable

    ]               shift and go to state 121
    ,               shift and go to state 122


state 114

    (38) variables -> variable .

    ]               reduce using rule 38 (variables -> variable .)
    ,               reduce using rule 38 (variables -> variable .)


state 115

    (33) matrix -> [ vectors ] .

    ;               reduce using rule 33 (matrix -> [ vectors ] .)


state 116

    (34) vectors -> vectors , . vector
    (36) vector -> . [ variables ]

    [               shift and go to state 88

    vector                         shift and go to state 123

state 117

    (10) instruction -> IF ( condition ) instructions ELSE . instructions
    (5) instructions -> . instructions instruction
    (6) instructions -> . instruction
    (7) instructions -> . { instructions }
    (8) instruction -> . statement ;
    (9) instruction -> . IF ( condition ) instructions
    (10) instruction -> . IF ( condition ) instructions ELSE instructions
    (11) instruction -> . FOR ID = range instructions
    (12) instruction -> . WHILE ( condition ) instructions
    (20) statement -> . assignment
    (21) statement -> . print_statement
    (65) statement -> . BREAK
    (66) statement -> . CONTINUE
    (67) statement -> . RETURN variable
    (22) assignment -> . variable = expression
    (23) assignment -> . variable = matrix_function
    (24) assignment -> . variable = matrix
    (25) assignment -> . variable ADDASSIGN expression
    (26) assignment -> . variable SUBASSIGN expression
    (27) assignment -> . variable MULASSIGN expression
    (28) assignment -> . variable DIVASSIGN expression
    (60) print_statement -> . PRINT printables
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    {               shift and go to state 6
    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 11
    BREAK           shift and go to state 14
    CONTINUE        shift and go to state 15
    RETURN          shift and go to state 16
    PRINT           shift and go to state 18
    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    instructions                   shift and go to state 124
    instruction                    shift and go to state 5
    statement                      shift and go to state 7
    assignment                     shift and go to state 12
    print_statement                shift and go to state 13
    variable                       shift and go to state 17
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 118

    (13) range -> expression : expression .
    (46) expression -> expression . + expression
    (47) expression -> expression . - expression
    (48) expression -> expression . * expression
    (49) expression -> expression . / expression
    (50) expression -> expression . DOTADD expression
    (51) expression -> expression . DOTSUB expression
    (52) expression -> expression . DOTMUL expression
    (53) expression -> expression . DOTDIV expression
    (54) expression -> expression . '

    {               reduce using rule 13 (range -> expression : expression .)
    IF              reduce using rule 13 (range -> expression : expression .)
    FOR             reduce using rule 13 (range -> expression : expression .)
    WHILE           reduce using rule 13 (range -> expression : expression .)
    BREAK           reduce using rule 13 (range -> expression : expression .)
    CONTINUE        reduce using rule 13 (range -> expression : expression .)
    RETURN          reduce using rule 13 (range -> expression : expression .)
    PRINT           reduce using rule 13 (range -> expression : expression .)
    ID              reduce using rule 13 (range -> expression : expression .)
    INT             reduce using rule 13 (range -> expression : expression .)
    FLOAT           reduce using rule 13 (range -> expression : expression .)
    +               shift and go to state 72
    -               shift and go to state 73
    *               shift and go to state 74
    /               shift and go to state 75
    DOTADD          shift and go to state 76
    DOTSUB          shift and go to state 77
    DOTMUL          shift and go to state 78
    DOTDIV          shift and go to state 79
    '               shift and go to state 80


state 119

    (45) matrix_element -> ID [ INT , INT ] .

    =               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    ADDASSIGN       reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    SUBASSIGN       reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    MULASSIGN       reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    DIVASSIGN       reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    ;               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    ,               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    EQ              reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    NEQ             reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    LE              reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    GE              reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    <               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    >               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    +               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    -               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    *               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    /               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    DOTADD          reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    DOTSUB          reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    DOTMUL          reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    DOTDIV          reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    '               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    )               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    :               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    {               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    IF              reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    FOR             reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    WHILE           reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    BREAK           reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    CONTINUE        reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    RETURN          reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    PRINT           reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    ID              reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    INT             reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    FLOAT           reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)
    ]               reduce using rule 45 (matrix_element -> ID [ INT , INT ] .)


state 120

    (29) matrix_function -> matrix_function_name ( INT ) .

    ;               reduce using rule 29 (matrix_function -> matrix_function_name ( INT ) .)


state 121

    (36) vector -> [ variables ] .

    ]               reduce using rule 36 (vector -> [ variables ] .)
    ,               reduce using rule 36 (vector -> [ variables ] .)


state 122

    (37) variables -> variables , . variable
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    ID              shift and go to state 10
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    variable                       shift and go to state 125
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 123

    (34) vectors -> vectors , vector .

    ]               reduce using rule 34 (vectors -> vectors , vector .)
    ,               reduce using rule 34 (vectors -> vectors , vector .)


state 124

    (10) instruction -> IF ( condition ) instructions ELSE instructions .
    (5) instructions -> instructions . instruction
    (8) instruction -> . statement ;
    (9) instruction -> . IF ( condition ) instructions
    (10) instruction -> . IF ( condition ) instructions ELSE instructions
    (11) instruction -> . FOR ID = range instructions
    (12) instruction -> . WHILE ( condition ) instructions
    (20) statement -> . assignment
    (21) statement -> . print_statement
    (65) statement -> . BREAK
    (66) statement -> . CONTINUE
    (67) statement -> . RETURN variable
    (22) assignment -> . variable = expression
    (23) assignment -> . variable = matrix_function
    (24) assignment -> . variable = matrix
    (25) assignment -> . variable ADDASSIGN expression
    (26) assignment -> . variable SUBASSIGN expression
    (27) assignment -> . variable MULASSIGN expression
    (28) assignment -> . variable DIVASSIGN expression
    (60) print_statement -> . PRINT printables
    (39) variable -> . ID
    (40) variable -> . element
    (41) variable -> . number
    (42) element -> . vector_element
    (43) element -> . matrix_element
    (58) number -> . INT
    (59) number -> . FLOAT
    (44) vector_element -> . ID [ INT ]
    (45) matrix_element -> . ID [ INT , INT ]

    IF              reduce using rule 10 (instruction -> IF ( condition ) instructions ELSE instructions .)
    FOR             reduce using rule 10 (instruction -> IF ( condition ) instructions ELSE instructions .)
    WHILE           reduce using rule 10 (instruction -> IF ( condition ) instructions ELSE instructions .)
    BREAK           reduce using rule 10 (instruction -> IF ( condition ) instructions ELSE instructions .)
    CONTINUE        reduce using rule 10 (instruction -> IF ( condition ) instructions ELSE instructions .)
    RETURN          reduce using rule 10 (instruction -> IF ( condition ) instructions ELSE instructions .)
    PRINT           reduce using rule 10 (instruction -> IF ( condition ) instructions ELSE instructions .)
    ID              reduce using rule 10 (instruction -> IF ( condition ) instructions ELSE instructions .)
    $end            reduce using rule 10 (instruction -> IF ( condition ) instructions ELSE instructions .)
    }               reduce using rule 10 (instruction -> IF ( condition ) instructions ELSE instructions .)
    ELSE            reduce using rule 10 (instruction -> IF ( condition ) instructions ELSE instructions .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

  ! INT             [ reduce using rule 10 (instruction -> IF ( condition ) instructions ELSE instructions .) ]
  ! FLOAT           [ reduce using rule 10 (instruction -> IF ( condition ) instructions ELSE instructions .) ]
  ! IF              [ shift and go to state 8 ]
  ! FOR             [ shift and go to state 9 ]
  ! WHILE           [ shift and go to state 11 ]
  ! BREAK           [ shift and go to state 14 ]
  ! CONTINUE        [ shift and go to state 15 ]
  ! RETURN          [ shift and go to state 16 ]
  ! PRINT           [ shift and go to state 18 ]
  ! ID              [ shift and go to state 10 ]

    instruction                    shift and go to state 25
    statement                      shift and go to state 7
    assignment                     shift and go to state 12
    print_statement                shift and go to state 13
    variable                       shift and go to state 17
    element                        shift and go to state 19
    number                         shift and go to state 20
    vector_element                 shift and go to state 21
    matrix_element                 shift and go to state 22

state 125

    (37) variables -> variables , variable .

    ]               reduce using rule 37 (variables -> variables , variable .)
    ,               reduce using rule 37 (variables -> variables , variable .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IF in state 111 resolved as shift
WARNING: shift/reduce conflict for FOR in state 111 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 111 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 111 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 111 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 111 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 111 resolved as shift
WARNING: shift/reduce conflict for ID in state 111 resolved as shift
WARNING: shift/reduce conflict for INT in state 111 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 111 resolved as shift
