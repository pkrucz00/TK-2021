
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programnonassocIFXnonassocELSEnonassoc=nonassocINTnonassocFLOATnonassocADDASSIGNSUBASSIGNnonassocMULASSIGNDIVASSIGNleft+-DOTADDDOTSUBleft*/DOTMULDOTDIVADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOAT FOR GE ID IF INT LE MULASSIGN NEQ ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROS empty :program : instructions_optinstructions_opt : instructions instructions_opt : emptyinstructions : instructions instruction\n                    | instruction\n                    | "{" instructions "}" instruction : statement ";"  instruction : IF \'(\' condition \')\' instructions %prec IFX  instruction : IF \'(\' condition \')\' instructions ELSE instructions  instruction : FOR ID \'=\' range instructions  instruction : WHILE \'(\' condition \')\' instructions  range : expression \':\' expression  condition : expression EQ expression\n                  | expression NEQ expression\n                  | expression LE expression\n                  | expression GE expression\n                  | expression \'<\' expression\n                  | expression \'>\' expression statement : assignment\n                  | print_statement assignment : variable "=" expression\n                   | variable "=" matrix_function\n                   | variable "=" matrix\n                   | variable ADDASSIGN expression\n                   | variable SUBASSIGN expression\n                   | variable MULASSIGN expression\n                   | variable DIVASSIGN expression matrix_function : matrix_function_name "(" INT ")"  matrix_function_name : ZEROS\n                             | ONES\n                             | EYE  matrix : "[" vectors "]"  vectors : vectors "," vector\n                | vector  vector : "[" variables "]"  variables : variables "," variable\n                  | variable  variable : ID\n                 | element\n                 | number  element : vector_element\n               | matrix_element vector_element : ID "[" INT "]"  matrix_element : ID "[" INT "," INT "]"  expression : expression \'+\' expression\n                   | expression \'-\' expression\n                   | expression \'*\' expression\n                   | expression \'/\' expression\n                   | expression DOTADD expression\n                   | expression DOTSUB expression\n                   | expression DOTMUL expression\n                   | expression DOTDIV expression\n                   | expression "\'"\n                   | "-" expression\n                   | "(" expression ")"\n                   | variable  number : INT\n               | FLOAT  print_statement : PRINT printables  printables : printables "," printable\n                   | printable  printable : STRING\n                  | variable  statement : BREAK  statement : CONTINUE  statement : RETURN variable '
    
_lr_action_items = {'{':([0,6,10,19,20,21,22,23,24,47,65,80,81,82,84,86,92,100,101,102,103,104,105,106,107,117,118,119,],[6,6,-39,-40,-41,-42,-43,-58,-59,-57,6,-54,-55,6,-44,6,-56,-46,-47,-48,-49,-50,-51,-52,-53,6,-13,-45,]),'$end':([0,1,2,3,4,5,25,27,42,93,108,111,124,],[-1,0,-2,-3,-4,-6,-5,-8,-7,-9,-11,-12,-10,]),'IF':([0,3,5,6,10,19,20,21,22,23,24,25,26,27,42,47,65,80,81,82,84,86,92,93,100,101,102,103,104,105,106,107,108,111,117,118,119,124,],[8,8,-6,8,-39,-40,-41,-42,-43,-58,-59,-5,8,-8,-7,-57,8,-54,-55,8,-44,8,-56,-9,-46,-47,-48,-49,-50,-51,-52,-53,-11,8,8,-13,-45,-10,]),'FOR':([0,3,5,6,10,19,20,21,22,23,24,25,26,27,42,47,65,80,81,82,84,86,92,93,100,101,102,103,104,105,106,107,108,111,117,118,119,124,],[9,9,-6,9,-39,-40,-41,-42,-43,-58,-59,-5,9,-8,-7,-57,9,-54,-55,9,-44,9,-56,-9,-46,-47,-48,-49,-50,-51,-52,-53,-11,9,9,-13,-45,-10,]),'WHILE':([0,3,5,6,10,19,20,21,22,23,24,25,26,27,42,47,65,80,81,82,84,86,92,93,100,101,102,103,104,105,106,107,108,111,117,118,119,124,],[11,11,-6,11,-39,-40,-41,-42,-43,-58,-59,-5,11,-8,-7,-57,11,-54,-55,11,-44,11,-56,-9,-46,-47,-48,-49,-50,-51,-52,-53,-11,11,11,-13,-45,-10,]),'BREAK':([0,3,5,6,10,19,20,21,22,23,24,25,26,27,42,47,65,80,81,82,84,86,92,93,100,101,102,103,104,105,106,107,108,111,117,118,119,124,],[14,14,-6,14,-39,-40,-41,-42,-43,-58,-59,-5,14,-8,-7,-57,14,-54,-55,14,-44,14,-56,-9,-46,-47,-48,-49,-50,-51,-52,-53,-11,14,14,-13,-45,-10,]),'CONTINUE':([0,3,5,6,10,19,20,21,22,23,24,25,26,27,42,47,65,80,81,82,84,86,92,93,100,101,102,103,104,105,106,107,108,111,117,118,119,124,],[15,15,-6,15,-39,-40,-41,-42,-43,-58,-59,-5,15,-8,-7,-57,15,-54,-55,15,-44,15,-56,-9,-46,-47,-48,-49,-50,-51,-52,-53,-11,15,15,-13,-45,-10,]),'RETURN':([0,3,5,6,10,19,20,21,22,23,24,25,26,27,42,47,65,80,81,82,84,86,92,93,100,101,102,103,104,105,106,107,108,111,117,118,119,124,],[16,16,-6,16,-39,-40,-41,-42,-43,-58,-59,-5,16,-8,-7,-57,16,-54,-55,16,-44,16,-56,-9,-46,-47,-48,-49,-50,-51,-52,-53,-11,16,16,-13,-45,-10,]),'PRINT':([0,3,5,6,10,19,20,21,22,23,24,25,26,27,42,47,65,80,81,82,84,86,92,93,100,101,102,103,104,105,106,107,108,111,117,118,119,124,],[18,18,-6,18,-39,-40,-41,-42,-43,-58,-59,-5,18,-8,-7,-57,18,-54,-55,18,-44,18,-56,-9,-46,-47,-48,-49,-50,-51,-52,-53,-11,18,18,-13,-45,-10,]),'ID':([0,3,5,6,9,10,16,18,19,20,21,22,23,24,25,26,27,28,31,33,34,35,36,37,42,43,46,47,48,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,86,88,92,93,100,101,102,103,104,105,106,107,108,109,111,117,118,119,122,124,],[10,10,-6,10,29,-39,10,10,-40,-41,-42,-43,-58,-59,-5,10,-8,10,10,10,10,10,10,10,-7,10,10,-57,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-54,-55,10,-44,10,10,-56,-9,-46,-47,-48,-49,-50,-51,-52,-53,-11,10,10,10,-13,-45,10,-10,]),'INT':([0,3,5,6,10,16,18,19,20,21,22,23,24,25,26,27,28,30,31,33,34,35,36,37,42,43,46,47,48,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,92,93,100,101,102,103,104,105,106,107,108,109,111,117,118,119,122,124,],[23,23,-6,23,-39,23,23,-40,-41,-42,-43,-58,-59,-5,23,-8,23,49,23,23,23,23,23,23,-7,23,23,-57,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-54,-55,23,-44,110,23,112,23,-56,23,-46,-47,-48,-49,-50,-51,-52,-53,23,23,23,23,-13,-45,23,23,]),'FLOAT':([0,3,5,6,10,16,18,19,20,21,22,23,24,25,26,27,28,31,33,34,35,36,37,42,43,46,47,48,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,86,88,92,93,100,101,102,103,104,105,106,107,108,109,111,117,118,119,122,124,],[24,24,-6,24,-39,24,24,-40,-41,-42,-43,-58,-59,-5,24,-8,24,24,24,24,24,24,24,-7,24,24,-57,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-54,-55,24,-44,24,24,-56,24,-46,-47,-48,-49,-50,-51,-52,-53,24,24,24,24,-13,-45,24,24,]),'}':([5,25,26,27,42,93,108,111,124,],[-6,-5,42,-8,-7,-9,-11,-12,-10,]),'ELSE':([5,25,27,42,93,108,111,124,],[-6,-5,-8,-7,117,-11,-12,-10,]),';':([7,10,12,13,14,15,19,20,21,22,23,24,32,38,39,40,41,47,51,52,53,59,60,61,62,80,81,84,91,92,100,101,102,103,104,105,106,107,115,119,120,],[27,-39,-20,-21,-65,-66,-40,-41,-42,-43,-58,-59,-67,-60,-62,-63,-64,-57,-22,-23,-24,-25,-26,-27,-28,-54,-55,-44,-61,-56,-46,-47,-48,-49,-50,-51,-52,-53,-33,-45,-29,]),'(':([8,11,28,31,33,34,35,36,37,43,46,48,54,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,109,],[28,31,43,43,43,43,43,43,43,43,43,43,87,-30,-31,-32,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'=':([10,17,19,20,21,22,23,24,29,84,119,],[-39,33,-40,-41,-42,-43,-58,-59,48,-44,-45,]),'ADDASSIGN':([10,17,19,20,21,22,23,24,84,119,],[-39,34,-40,-41,-42,-43,-58,-59,-44,-45,]),'SUBASSIGN':([10,17,19,20,21,22,23,24,84,119,],[-39,35,-40,-41,-42,-43,-58,-59,-44,-45,]),'MULASSIGN':([10,17,19,20,21,22,23,24,84,119,],[-39,36,-40,-41,-42,-43,-58,-59,-44,-45,]),'DIVASSIGN':([10,17,19,20,21,22,23,24,84,119,],[-39,37,-40,-41,-42,-43,-58,-59,-44,-45,]),',':([10,19,20,21,22,23,24,38,39,40,41,49,84,89,90,91,113,114,119,121,123,125,],[-39,-40,-41,-42,-43,-58,-59,63,-62,-63,-64,85,-44,116,-35,-61,122,-38,-45,-36,-34,-37,]),'EQ':([10,19,20,21,22,23,24,45,47,80,81,84,92,100,101,102,103,104,105,106,107,119,],[-39,-40,-41,-42,-43,-58,-59,66,-57,-54,-55,-44,-56,-46,-47,-48,-49,-50,-51,-52,-53,-45,]),'NEQ':([10,19,20,21,22,23,24,45,47,80,81,84,92,100,101,102,103,104,105,106,107,119,],[-39,-40,-41,-42,-43,-58,-59,67,-57,-54,-55,-44,-56,-46,-47,-48,-49,-50,-51,-52,-53,-45,]),'LE':([10,19,20,21,22,23,24,45,47,80,81,84,92,100,101,102,103,104,105,106,107,119,],[-39,-40,-41,-42,-43,-58,-59,68,-57,-54,-55,-44,-56,-46,-47,-48,-49,-50,-51,-52,-53,-45,]),'GE':([10,19,20,21,22,23,24,45,47,80,81,84,92,100,101,102,103,104,105,106,107,119,],[-39,-40,-41,-42,-43,-58,-59,69,-57,-54,-55,-44,-56,-46,-47,-48,-49,-50,-51,-52,-53,-45,]),'<':([10,19,20,21,22,23,24,45,47,80,81,84,92,100,101,102,103,104,105,106,107,119,],[-39,-40,-41,-42,-43,-58,-59,70,-57,-54,-55,-44,-56,-46,-47,-48,-49,-50,-51,-52,-53,-45,]),'>':([10,19,20,21,22,23,24,45,47,80,81,84,92,100,101,102,103,104,105,106,107,119,],[-39,-40,-41,-42,-43,-58,-59,71,-57,-54,-55,-44,-56,-46,-47,-48,-49,-50,-51,-52,-53,-45,]),'+':([10,19,20,21,22,23,24,45,47,51,59,60,61,62,64,80,81,83,84,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,118,119,],[-39,-40,-41,-42,-43,-58,-59,72,-57,72,72,72,72,72,72,-54,-55,72,-44,-56,72,72,72,72,72,72,-46,-47,-48,-49,-50,-51,-52,-53,72,-45,]),'-':([10,19,20,21,22,23,24,28,31,33,34,35,36,37,43,45,46,47,48,51,59,60,61,62,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,118,119,],[-39,-40,-41,-42,-43,-58,-59,46,46,46,46,46,46,46,46,73,46,-57,46,73,73,73,73,73,73,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-54,-55,73,-44,-56,73,73,73,73,73,73,-46,-47,-48,-49,-50,-51,-52,-53,46,73,-45,]),'*':([10,19,20,21,22,23,24,45,47,51,59,60,61,62,64,80,81,83,84,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,118,119,],[-39,-40,-41,-42,-43,-58,-59,74,-57,74,74,74,74,74,74,-54,74,74,-44,-56,74,74,74,74,74,74,74,74,-48,-49,74,74,-52,-53,74,-45,]),'/':([10,19,20,21,22,23,24,45,47,51,59,60,61,62,64,80,81,83,84,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,118,119,],[-39,-40,-41,-42,-43,-58,-59,75,-57,75,75,75,75,75,75,-54,75,75,-44,-56,75,75,75,75,75,75,75,75,-48,-49,75,75,-52,-53,75,-45,]),'DOTADD':([10,19,20,21,22,23,24,45,47,51,59,60,61,62,64,80,81,83,84,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,118,119,],[-39,-40,-41,-42,-43,-58,-59,76,-57,76,76,76,76,76,76,-54,-55,76,-44,-56,76,76,76,76,76,76,-46,-47,-48,-49,-50,-51,-52,-53,76,-45,]),'DOTSUB':([10,19,20,21,22,23,24,45,47,51,59,60,61,62,64,80,81,83,84,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,118,119,],[-39,-40,-41,-42,-43,-58,-59,77,-57,77,77,77,77,77,77,-54,-55,77,-44,-56,77,77,77,77,77,77,-46,-47,-48,-49,-50,-51,-52,-53,77,-45,]),'DOTMUL':([10,19,20,21,22,23,24,45,47,51,59,60,61,62,64,80,81,83,84,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,118,119,],[-39,-40,-41,-42,-43,-58,-59,78,-57,78,78,78,78,78,78,-54,78,78,-44,-56,78,78,78,78,78,78,78,78,-48,-49,78,78,-52,-53,78,-45,]),'DOTDIV':([10,19,20,21,22,23,24,45,47,51,59,60,61,62,64,80,81,83,84,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,118,119,],[-39,-40,-41,-42,-43,-58,-59,79,-57,79,79,79,79,79,79,-54,79,79,-44,-56,79,79,79,79,79,79,79,79,-48,-49,79,79,-52,-53,79,-45,]),"'":([10,19,20,21,22,23,24,45,47,51,59,60,61,62,64,80,81,83,84,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,118,119,],[-39,-40,-41,-42,-43,-58,-59,80,-57,80,80,80,80,80,80,-54,-55,80,-44,-56,80,80,80,80,80,80,-46,-47,-48,-49,-50,-51,-52,-53,80,-45,]),')':([10,19,20,21,22,23,24,44,47,50,64,80,81,84,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,112,119,],[-39,-40,-41,-42,-43,-58,-59,65,-57,86,92,-54,-55,-44,-56,-14,-15,-16,-17,-18,-19,-46,-47,-48,-49,-50,-51,-52,-53,120,-45,]),':':([10,19,20,21,22,23,24,47,80,81,83,84,92,100,101,102,103,104,105,106,107,119,],[-39,-40,-41,-42,-43,-58,-59,-57,-54,-55,109,-44,-56,-46,-47,-48,-49,-50,-51,-52,-53,-45,]),']':([10,19,20,21,22,23,24,49,84,89,90,110,113,114,119,121,123,125,],[-39,-40,-41,-42,-43,-58,-59,84,-44,115,-35,119,121,-38,-45,-36,-34,-37,]),'[':([10,33,55,116,],[30,55,88,88,]),'STRING':([18,63,],[40,40,]),'ZEROS':([33,],[56,]),'ONES':([33,],[57,]),'EYE':([33,],[58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,6,65,82,86,117,],[3,26,93,108,111,124,]),'empty':([0,],[4,]),'instruction':([0,3,6,26,65,82,86,93,108,111,117,124,],[5,25,5,25,5,5,5,25,25,25,5,25,]),'statement':([0,3,6,26,65,82,86,93,108,111,117,124,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'assignment':([0,3,6,26,65,82,86,93,108,111,117,124,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'print_statement':([0,3,6,26,65,82,86,93,108,111,117,124,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'variable':([0,3,6,16,18,26,28,31,33,34,35,36,37,43,46,48,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,86,88,93,108,109,111,117,122,124,],[17,17,17,32,41,17,47,47,47,47,47,47,47,47,47,47,41,17,47,47,47,47,47,47,47,47,47,47,47,47,47,47,17,17,114,17,17,47,17,17,125,17,]),'element':([0,3,6,16,18,26,28,31,33,34,35,36,37,43,46,48,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,86,88,93,108,109,111,117,122,124,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'number':([0,3,6,16,18,26,28,31,33,34,35,36,37,43,46,48,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,86,88,93,108,109,111,117,122,124,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'vector_element':([0,3,6,16,18,26,28,31,33,34,35,36,37,43,46,48,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,86,88,93,108,109,111,117,122,124,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'matrix_element':([0,3,6,16,18,26,28,31,33,34,35,36,37,43,46,48,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,86,88,93,108,109,111,117,122,124,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'printables':([18,],[38,]),'printable':([18,63,],[39,91,]),'condition':([28,31,],[44,50,]),'expression':([28,31,33,34,35,36,37,43,46,48,66,67,68,69,70,71,72,73,74,75,76,77,78,79,109,],[45,45,51,59,60,61,62,64,81,83,94,95,96,97,98,99,100,101,102,103,104,105,106,107,118,]),'matrix_function':([33,],[52,]),'matrix':([33,],[53,]),'matrix_function_name':([33,],[54,]),'range':([48,],[82,]),'vectors':([55,],[89,]),'vector':([55,116,],[90,123,]),'variables':([88,],[113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','Mparser.py',30),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',34),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',38),
  ('instructions_opt -> empty','instructions_opt',1,'p_instructions_opt_2','Mparser.py',42),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Mparser.py',46),
  ('instructions -> instruction','instructions',1,'p_instructions','Mparser.py',47),
  ('instructions -> { instructions }','instructions',3,'p_instructions','Mparser.py',48),
  ('instruction -> statement ;','instruction',2,'p_instruction','Mparser.py',52),
  ('instruction -> IF ( condition ) instructions','instruction',5,'p_instruction_if','Mparser.py',56),
  ('instruction -> IF ( condition ) instructions ELSE instructions','instruction',7,'p_instruction_if_else','Mparser.py',60),
  ('instruction -> FOR ID = range instructions','instruction',5,'p_instruction_for','Mparser.py',64),
  ('instruction -> WHILE ( condition ) instructions','instruction',5,'p_instruction_while','Mparser.py',68),
  ('range -> expression : expression','range',3,'p_range','Mparser.py',72),
  ('condition -> expression EQ expression','condition',3,'p_condition','Mparser.py',76),
  ('condition -> expression NEQ expression','condition',3,'p_condition','Mparser.py',77),
  ('condition -> expression LE expression','condition',3,'p_condition','Mparser.py',78),
  ('condition -> expression GE expression','condition',3,'p_condition','Mparser.py',79),
  ('condition -> expression < expression','condition',3,'p_condition','Mparser.py',80),
  ('condition -> expression > expression','condition',3,'p_condition','Mparser.py',81),
  ('statement -> assignment','statement',1,'p_statement','Mparser.py',85),
  ('statement -> print_statement','statement',1,'p_statement','Mparser.py',86),
  ('assignment -> variable = expression','assignment',3,'p_assignment','Mparser.py',90),
  ('assignment -> variable = matrix_function','assignment',3,'p_assignment','Mparser.py',91),
  ('assignment -> variable = matrix','assignment',3,'p_assignment','Mparser.py',92),
  ('assignment -> variable ADDASSIGN expression','assignment',3,'p_assignment','Mparser.py',93),
  ('assignment -> variable SUBASSIGN expression','assignment',3,'p_assignment','Mparser.py',94),
  ('assignment -> variable MULASSIGN expression','assignment',3,'p_assignment','Mparser.py',95),
  ('assignment -> variable DIVASSIGN expression','assignment',3,'p_assignment','Mparser.py',96),
  ('matrix_function -> matrix_function_name ( INT )','matrix_function',4,'p_matrix_function','Mparser.py',100),
  ('matrix_function_name -> ZEROS','matrix_function_name',1,'p_matrix_function_name','Mparser.py',104),
  ('matrix_function_name -> ONES','matrix_function_name',1,'p_matrix_function_name','Mparser.py',105),
  ('matrix_function_name -> EYE','matrix_function_name',1,'p_matrix_function_name','Mparser.py',106),
  ('matrix -> [ vectors ]','matrix',3,'p_matrix','Mparser.py',110),
  ('vectors -> vectors , vector','vectors',3,'p_vectors','Mparser.py',114),
  ('vectors -> vector','vectors',1,'p_vectors','Mparser.py',115),
  ('vector -> [ variables ]','vector',3,'p_vector','Mparser.py',119),
  ('variables -> variables , variable','variables',3,'p_variables','Mparser.py',123),
  ('variables -> variable','variables',1,'p_variables','Mparser.py',124),
  ('variable -> ID','variable',1,'p_variable','Mparser.py',128),
  ('variable -> element','variable',1,'p_variable','Mparser.py',129),
  ('variable -> number','variable',1,'p_variable','Mparser.py',130),
  ('element -> vector_element','element',1,'p_element','Mparser.py',134),
  ('element -> matrix_element','element',1,'p_element','Mparser.py',135),
  ('vector_element -> ID [ INT ]','vector_element',4,'p_vector_element','Mparser.py',139),
  ('matrix_element -> ID [ INT , INT ]','matrix_element',6,'p_matrix_element','Mparser.py',143),
  ('expression -> expression + expression','expression',3,'p_expression','Mparser.py',147),
  ('expression -> expression - expression','expression',3,'p_expression','Mparser.py',148),
  ('expression -> expression * expression','expression',3,'p_expression','Mparser.py',149),
  ('expression -> expression / expression','expression',3,'p_expression','Mparser.py',150),
  ('expression -> expression DOTADD expression','expression',3,'p_expression','Mparser.py',151),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression','Mparser.py',152),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression','Mparser.py',153),
  ('expression -> expression DOTDIV expression','expression',3,'p_expression','Mparser.py',154),
  ("expression -> expression '",'expression',2,'p_expression','Mparser.py',155),
  ('expression -> - expression','expression',2,'p_expression','Mparser.py',156),
  ('expression -> ( expression )','expression',3,'p_expression','Mparser.py',157),
  ('expression -> variable','expression',1,'p_expression','Mparser.py',158),
  ('number -> INT','number',1,'p_number','Mparser.py',162),
  ('number -> FLOAT','number',1,'p_number','Mparser.py',163),
  ('print_statement -> PRINT printables','print_statement',2,'p_print_statement','Mparser.py',167),
  ('printables -> printables , printable','printables',3,'p_printables','Mparser.py',171),
  ('printables -> printable','printables',1,'p_printables','Mparser.py',172),
  ('printable -> STRING','printable',1,'p_printable','Mparser.py',176),
  ('printable -> variable','printable',1,'p_printable','Mparser.py',177),
  ('statement -> BREAK','statement',1,'p_break_statement','Mparser.py',181),
  ('statement -> CONTINUE','statement',1,'p_continue_statement','Mparser.py',185),
  ('statement -> RETURN variable','statement',2,'p_return_statement','Mparser.py',189),
]
